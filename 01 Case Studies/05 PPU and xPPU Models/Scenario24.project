<?xml version="1.0" encoding="ASCII"?>
<C:Configuration xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:C="http://www.example.org/ppuIECScenario/config" xmlns:SFC="http://www.example.org/ppuIECScenario/SFC" xmlns:ST="http://www.example.org/ppuIECScenario/ST" xmlns:STE="http://www.example.org/ppuIECScenario/STE" identifier="Scenario24">
  <resources name="Scenario24">
    <globalVariables name="IsSFCResetting" scope="VAR_GLOBAL" type="BOOL" typeName="BOOL">
      <location/>
    </globalVariables>
    <pous controlTasks="//@resources.0/@tasks.0" callees="//@resources.0/@pous.37" identifier="MAIN">
      <declaration>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
          <statements>//PPU</statements>
        </comment>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
          <statements>//PPU</statements>
        </comment>
        <internalVariables name="xPPU" scope="VAR" type="DERIVED" typeName="xPPU">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorInitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_NumberOfWPsAtConveyor" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PPU_EngineStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="MAIN" id="_d2Dn8JowEeyfB_I1yU9UvA" text="xPPU();&#xA;xPPU.Stack();&#xA;xPPU.Crane();&#xA;xPPU.Stamp();&#xA;xPPU.LargeSortingConveyor();&#xA;xPPU.PicAlphaConveyor();&#xA;xPPU.SmallSortingConveyor();&#xA;xPPU.RefillConveyor();&#xA;xPPU.PicAlpha();&#xA;xPPU.SafetyDoor();&#xA;xPPU.LightGrid();&#xA;&#xA;&#xA;//Stack&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPPickedUp := xPPU.Crane.Table.AtStack.DI_SwitchTrue AND xPPU.Crane.WPPickedUp;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stack_WPProvided := xPPU.Stack.WPProvided;&#xA;&#x9;Stack_WPType_Black := xPPU.Stack.WPType_Black;&#xA;&#x9;Stack_WPType_White := xPPU.Stack.WPType_White;&#xA;&#x9;Stack_WPType_Metallic := xPPU.Stack.WPType_Metallic;&#xA;&#x9;Stack_WPWeight_Light := xPPU.Stack.WPWeight_Light;&#xA;&#x9;Stack_WPWeight_Medium := xPPU.Stack.WPWeight_Medium;&#xA;&#x9;Stack_WPWeight_Heavy := xPPU.Stack.WPWeight_Heavy;&#x9;&#xA;//Crane&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPProvided := Stack_WPProvided;&#xA;&#x9;Check_Stack_WPType_Black := Stack_WPType_Black;&#xA;&#x9;Check_Stack_WPType_White := Stack_WPType_White;&#xA;&#x9;Check_Stack_WPType_Metallic := Stack_WPType_Metallic;&#xA;&#x9;Check_LargeSortingConveyor_IsSorting := LargeSortingConveyor_IsSorting;&#xA;&#x9;Check_LargeSortingConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#x9;&#xA;&#x9;Check_Stamp_IsStamping := Stamp_IsStamping;&#xA;&#x9;Check_Stamp_WPAvailable := Stamp_WPAvailable;&#xA;&#x9;Check_Stamp_AutomaticExecuteCompleted := Stamp_AutomaticExecuteCompleted;&#xA;&#x9;Check_RefillConveyor_IsSending := RefillConveyor_IsSending;&#xA;&#x9;//Giving Signals&#xA;&#x9;Crane_WPType_Black := xPPU.Crane.WPType_Black;&#xA;&#x9;Crane_WPType_White := xPPU.Crane.WPType_White;&#xA;&#x9;Crane_WPType_Metallic := xPPU.Crane.WPType_Metallic;&#xA;&#x9;Crane_WPWeight_Light := xPPU.Crane.WPWeight_Light;&#xA;&#x9;Crane_WPWeight_Medium := xPPU.Crane.WPWeight_Medium;&#xA;&#x9;Crane_WPWeight_Heavy := xPPU.Crane.WPWeight_Heavy;&#xA;&#x9;Crane_Conveyor_AllowedToOperate := xPPU.Crane.Conveyor_AllowedToOperate;&#xA;&#x9;Crane_Stamp_AllowedToOperate := xPPU.Crane.Stamp_AllowedToOperate;&#xA;&#x9;Crane_WPPickedUp := xPPU.Crane.Gripper.VacuumSwitch.DI_TakenIn;&#xA;//Stamp&#x9;&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stamp_AllowedToOperate := Crane_Stamp_AllowedToOperate;&#xA;&#x9;Check_Stamp_WPWeight_Light := Crane_WPWeight_Light;&#xA;&#x9;Check_Stamp_WPWeight_Medium := Crane_WPWeight_Medium;&#xA;    Check_Stamp_WPWeight_Heavy := Crane_WPWeight_Heavy;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stamp_WPType_Black := xPPU.Stamp.WPType_Black;&#xA;&#x9;Stamp_WPType_White := xPPU.Stamp.WPType_White;&#xA;&#x9;Stamp_WPType_Metallic := xPPU.Stamp.WPType_Metallic;&#xA;&#x9;Stamp_WPWeight_Light := xPPU.Stamp.WPWeight_Light;&#xA;&#x9;Stamp_WPWeight_Medium := xPPU.Stamp.WPWeight_Medium;&#xA;&#x9;Stamp_WPWeight_Heavy := xPPU.Stamp.WPWeight_Heavy;&#xA;&#x9;Stamp_IsStamping := xPPU.Stamp.IsStamping;&#xA;&#x9;Stamp_WPAvailable := xPPU.Stamp.WPAvailable.DI_SwitchTrue;&#xA;&#x9;Stamp_AutomaticExecuteCompleted&#x9;:= xPPU.Stamp.AutomaticExecuteCompleted;&#xA;//LargeSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_LargeSortingConveyor_AllowedToOperate := Crane_Conveyor_AllowedToOperate OR RefillConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorInitCompleted := PicALphaConveyor_InitCompleted;&#x9;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted := PicALphaConveyor_AutomaticExecuteReceivingCompleted;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;LargeSortingConveyor_NumberOfWPsAtConveyor := xPPU.LargeSortingConveyor.NumberOfWPsAtConveyor;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToInit := xPPU.LargeSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToOperate:= xPPU.LargeSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;LargeSortingConveyor_IsSorting := xPPU.LargeSortingConveyor.IsSorting;&#xA;&#x9;LargeSortingConveyor_AutomaticExecuteCompleted := xPPU.LargeSortingConveyor.AutomaticExecuteCompleted;&#x9;&#xA;//PicALphaConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlphaConveyor_AllowedToInit := LargeSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToReceive := LargeSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToSend := LargeSortingConveyor_NumberOfWPsAtConveyor=3;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_InitCompleted := SmallSortingConveyor_InitCompleted;&#xA;&#x9;Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted := PicAlpha_AutomaticExecuteCompleted;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted := SmallSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlphaConveyor_InitCompleted := xPPU.PicALphaConveyor.InitCompleted;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToInit := xPPU.PicALphaConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;PicAlphaConveyor_PicAlpha_AllowedToOperate := xPPU.PicAlphaConveyor.PicAlpha_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToOperate := xPPU.PicALphaConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteReceivingCompleted := xPPU.PicALphaConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteSendingCompleted := xPPU.PicALphaConveyor.AutomaticExecuteSendingCompleted;&#xA;//SmallSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_SmallSortingConveyor_AllowedToInit := PicALphaConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_SmallSortingConveyor_AllowedToOperate := PicALphaConveyor_FollowConveyor_AllowedToOperate;&#x9;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_InitCompleted := RefillConveyor_InitCompleted;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted := RefillConveyor_AutomaticExecuteReceivingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;SmallSortingConveyor_InitCompleted := xPPU.SmallSortingConveyor.InitCompleted;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToInit := xPPU.SmallSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToOperate:= xPPU.SmallSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;SmallSortingConveyor_AutomaticExecuteCompleted := xPPU.SmallSortingConveyor.AutomaticExecuteCompleted;&#xA;&#x9;SmallSortingConveyor_IsSorting := xPPU.SmallSortingConveyor.IsSorting;&#x9;&#xA;//RefillConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_RefillConveyor_AllowedToInit := SmallSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_RefillConveyor_AllowedToReceive := SmallSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_AllowedToSend := NOT Crane_WPPickedUp AND NOT LargeSortingConveyor_IsSorting AND NOT Check_LargeSortingConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_InitCompleted := LargeSortingConveyor_InitCompleted;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;RefillConveyor_InitCompleted := xPPU.RefillConveyor.InitCompleted;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToInit := xPPU.RefillConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToOperate := xPPU.RefillConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;RefillConveyor_AutomaticExecuteReceivingCompleted := xPPU.RefillConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;RefillConveyor_IsSending := xPPU.RefillConveyor.IsSending;&#xA;&#x9;RefillConveyor_AutomaticExecuteSendingCompleted := xPPU.RefillConveyor.AutomaticExecuteSendingCompleted;&#x9;&#xA;//PicAlpha&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlpha_AllowedToOperate := PicAlphaConveyor_PicAlpha_AllowedToOperate;&#xA;&#x9;Check_PicAlpha_Conveyor_AutomaticExecuteCompleted := PicAlphaConveyor_AutomaticExecuteSendingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlpha_InitCompleted := xPPU.PicAlpha.InitCompleted;&#xA;&#x9;PicAlpha_Conveyor_AllowedToOperate := xPPU.PicAlpha.Conveyor_AllowedToOperate;&#xA;//PPU&#xA;&#x9;PPU_EngineStop := xPPU.ManuelMode;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;PicAlpha_AutomaticExecuteCompleted := xPPU.PicAlpha.AutomaticExecuteCompleted;">
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Dn8ZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="6" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <functionCall expressionType="FUNCTION_CALL" symbol="xPPU"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Dn8powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="12" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stack"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Dn85owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="12" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Crane"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Dn9JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="12" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stamp"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Dn9ZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="27" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Dn9powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="23" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Dn95owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="27" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Dn-JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Dn-ZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="15" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Dn-powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="17" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="SafetyDoor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Dn-5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="16" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="LightGrid"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Dn_ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="1" endColumnPos="91" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          <right xsi:type="STE:BinaryExpression" id="_d2Dn_JowEeyfB_I1yU9UvA" operator="AND">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
                  </innerVariable>
                </innerVariable>
              </innerVariable>
            </left>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
              </innerVariable>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Dn_5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="42" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_d2Dn_powEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoAZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="46" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoAJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoA5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="46" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoApowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoBZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="52" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoBJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoB5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="50" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoBpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoCZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="52" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoCJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoC5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="50" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoCpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoDZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="43" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoDJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoD5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="47" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoDpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoEZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="47" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoEJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoE5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="1" endColumnPos="53" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoEpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoFZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="1" endColumnPos="71" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoFJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoF5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="103" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoFpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoGZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="43" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoGJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoG5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="45" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoGpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoHZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="73" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoHJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoH5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="59" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoHpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoIZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="46" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoIJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoI5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="46" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoIpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoJZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="52" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoJJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoJ5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="50" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoJpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoKZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="52" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoKJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoK5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="50" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoKpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoLZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="72" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoLJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoL5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="66" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoLpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoMZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="63" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoMJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="VacuumSwitch">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_TakenIn"/>
                </innerVariable>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoM5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="61" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoMpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoNZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="50" absEndLine="50" relStartLine="50" relEndLine="50" startColumnPos="1" endColumnPos="51" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoNJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoN5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="1" endColumnPos="53" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoNpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoOZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="4" endColumnPos="54" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoOJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoO5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="46" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoOpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoPZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="46" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoPJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoP5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="52" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoPpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoQZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="57" absEndLine="57" relStartLine="57" relEndLine="57" startColumnPos="1" endColumnPos="50" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoQJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoQ5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="52" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoQpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoRZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="50" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoRJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoR5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="42" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoRpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoSZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="58" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoSJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPAvailable">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoS5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="72" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoSpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoTZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="65" absEndLine="65" relStartLine="65" relEndLine="65" startColumnPos="1" endColumnPos="129" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:BinaryExpression" id="_d2DoTJowEeyfB_I1yU9UvA" operator="OR">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoT5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="89" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoTpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoUZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="67" absEndLine="67" relStartLine="67" relEndLine="67" startColumnPos="1" endColumnPos="122" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoUJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoU5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="69" absEndLine="69" relStartLine="69" relEndLine="69" startColumnPos="1" endColumnPos="94" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoUpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoVZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="108" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoVJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoV5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="113" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoVpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoWZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="70" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoWJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoW5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="73" absEndLine="73" relStartLine="73" relEndLine="73" startColumnPos="1" endColumnPos="102" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoWpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoXZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="76" absEndLine="76" relStartLine="76" relEndLine="76" startColumnPos="1" endColumnPos="90" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoXJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoX5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="96" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoXpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoYZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="85" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_d2DoYJowEeyfB_I1yU9UvA" operator="EQUAL">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoY5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="90" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoYpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoZZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="96" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoZJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoZ5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="81" absEndLine="81" relStartLine="81" relEndLine="81" startColumnPos="1" endColumnPos="114" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoZpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoaZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="83" absEndLine="83" relStartLine="83" relEndLine="83" startColumnPos="1" endColumnPos="70" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoaJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Doa5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="100" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoapowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DobZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="94" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2DobJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Dob5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="86" absEndLine="86" relStartLine="86" relEndLine="86" startColumnPos="1" endColumnPos="106" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2DobpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DocZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="112" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DocJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Doc5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="88" absEndLine="88" relStartLine="88" relEndLine="88" startColumnPos="1" endColumnPos="108" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DocpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DodZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="91" absEndLine="91" relStartLine="91" relEndLine="91" startColumnPos="1" endColumnPos="90" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_d2DodJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Dod5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="92" absEndLine="92" relStartLine="92" relEndLine="92" startColumnPos="1" endColumnPos="96" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2DodpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoeZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="93" absEndLine="93" relStartLine="93" relEndLine="93" startColumnPos="1" endColumnPos="88" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoeJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Doe5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="94" absEndLine="94" relStartLine="94" relEndLine="94" startColumnPos="1" endColumnPos="121" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoepowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DofZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="96" absEndLine="96" relStartLine="96" relEndLine="96" startColumnPos="1" endColumnPos="78" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DofJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Dof5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="97" absEndLine="97" relStartLine="97" relEndLine="97" startColumnPos="1" endColumnPos="108" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_d2DofpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DogZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="98" absEndLine="98" relStartLine="98" relEndLine="98" startColumnPos="1" endColumnPos="113" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2DogJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Dog5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="99" absEndLine="99" relStartLine="99" relEndLine="99" startColumnPos="1" endColumnPos="102" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DogpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DohZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="100" absEndLine="100" relStartLine="100" relEndLine="100" startColumnPos="1" endColumnPos="70" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_d2DohJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Doh5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="103" absEndLine="103" relStartLine="103" relEndLine="103" startColumnPos="1" endColumnPos="88" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_d2DohpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DoiZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="104" absEndLine="104" relStartLine="104" relEndLine="104" startColumnPos="1" endColumnPos="94" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoiJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Doi5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="105" absEndLine="105" relStartLine="105" relEndLine="105" startColumnPos="1" endColumnPos="150" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_d2DoipowEeyfB_I1yU9UvA" operator="AND">
            <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
              <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
            </left>
            <right xsi:type="STE:BinaryExpression" operator="AND">
              <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
              </left>
              <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
              </right>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DojZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="106" absEndLine="106" relStartLine="106" relEndLine="106" startColumnPos="1" endColumnPos="88" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DojJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Doj5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="107" absEndLine="107" relStartLine="107" relEndLine="107" startColumnPos="1" endColumnPos="112" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DojpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DokZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="109" absEndLine="109" relStartLine="109" relEndLine="109" startColumnPos="1" endColumnPos="66" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DokJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Dok5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="110" absEndLine="110" relStartLine="110" relEndLine="110" startColumnPos="1" endColumnPos="96" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_d2DokpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DolZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="111" absEndLine="111" relStartLine="111" relEndLine="111" startColumnPos="1" endColumnPos="102" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2DolJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Dol5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="112" absEndLine="112" relStartLine="112" relEndLine="112" startColumnPos="1" endColumnPos="108" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DolpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DomZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="113" absEndLine="113" relStartLine="113" relEndLine="113" startColumnPos="1" endColumnPos="58" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_d2DomJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSending"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Dom5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="114" absEndLine="114" relStartLine="114" relEndLine="114" startColumnPos="1" endColumnPos="104" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DompowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DonZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="117" absEndLine="117" relStartLine="117" relEndLine="117" startColumnPos="1" endColumnPos="78" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2DonJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Don5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="118" absEndLine="118" relStartLine="118" relEndLine="118" startColumnPos="1" endColumnPos="103" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DonpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DooZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="120" absEndLine="120" relStartLine="120" relEndLine="120" startColumnPos="1" endColumnPos="54" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DooJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Doo5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="121" absEndLine="121" relStartLine="121" relEndLine="121" startColumnPos="1" endColumnPos="78" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoopowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2DopZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="123" absEndLine="123" relStartLine="123" relEndLine="123" startColumnPos="1" endColumnPos="34" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2DopJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Dop5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="129" absEndLine="129" relStartLine="129" relEndLine="129" startColumnPos="1" endColumnPos="78" structuredText="_d2Dn8JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2DoppowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.36" identifier="BistableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="BistableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Retract" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PositionTransmitter" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" condition="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" condition="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" condition="//@resources.0/@pous.1/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" condition="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" condition="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" condition="//@resources.0/@pous.1/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.34 //@resources.0/@pous.35" identifier="InductiveSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPMetallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.18" identifier="InductiveSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_InductiveSwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.18 //@resources.0/@pous.35 //@resources.0/@pous.36" identifier="MicroSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MicroSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_SwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26 //@resources.0/@pous.28 //@resources.0/@pous.29 //@resources.0/@pous.35 //@resources.0/@pous.36" identifier="MonostableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MonostableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PositionTransmitter" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" condition="//@resources.0/@pous.5/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" condition="//@resources.0/@pous.5/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" condition="//@resources.0/@pous.5/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" condition="//@resources.0/@pous.5/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.18 //@resources.0/@pous.28 //@resources.0/@pous.29 //@resources.0/@pous.30 //@resources.0/@pous.31 //@resources.0/@pous.34" identifier="Motor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stopped" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="TurningClockwise" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="TurningCounterclockwise" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Motor">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_TurnClockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_TurnCounterclockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="AI_Position" scope="VAR_OUTPUT" type="UINT" typeName="UINT">
          <location type="I" dataType="None"/>
        </outputVariables>
        <outputVariables name="AI_Speed" scope="VAR_OUTPUT" type="UDINT" typeName="UDINT">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Stop">
        <implementation xsi:type="ST:StructuredText" label="ACT_Stop" id="_d2DoqJowEeyfB_I1yU9UvA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := TRUE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2DoqpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_d2DoqJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_d2DoqZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2DorJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_d2DoqJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_d2Doq5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2DorpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="15" structuredText="_d2DoqJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_d2DorZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2DosJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_d2DoqJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_d2Dor5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2DospowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_d2DoqJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_d2DosZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnClockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnClockwise" id="_d2Dos5owEeyfB_I1yU9UvA" text="DO_TurnClockwise := TRUE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := TRUE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2DotZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_d2Dos5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_d2DotJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Dot5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_d2Dos5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_d2DotpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2DouZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_d2Dos5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_d2DouJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Dou5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="24" structuredText="_d2Dos5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_d2DoupowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2DovZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_d2Dos5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_d2DovJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnCounterclockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnCounterclockwise" id="_d2DovpowEeyfB_I1yU9UvA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := TRUE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2DowJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_d2DovpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_d2Dov5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2DowpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="31" structuredText="_d2DovpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_d2DowZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2DoxJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_d2DovpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_d2Dow5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2DoxpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_d2DovpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_d2DoxZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2DoyJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="31" structuredText="_d2DovpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_d2Dox5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.35 //@resources.0/@pous.36" identifier="OperationPanel" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OperationPanel">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_StartButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_AutomaticButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_EmergencyStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampGreen" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampWhite" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="OperationPanel" id="_d2EPCZowEeyfB_I1yU9UvA" text="EmergencyStop := NOT DI_EmergencyStop;&#xA;StartButton := DI_StartButton;&#xA;ManuelMode := NOT DI_AutomaticButton;&#xA;AutomaticMode := DI_AutomaticButton;">
        <statements xsi:type="ST:Assignment" id="_d2EPC5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_d2EPCZowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:UnaryExpression" id="_d2EPCpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2EPDZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_d2EPCZowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_d2EPDJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StartButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2EPD5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_d2EPCZowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:UnaryExpression" id="_d2EPDpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2EPEZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_d2EPCZowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2EPEJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
        </statements>
      </implementations>
      <actions name="ACT_TurnLampGreen_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_Off" id="_d2DoyZowEeyfB_I1yU9UvA" text="DO_LampGreen := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2Doy5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="21" structuredText="_d2DoyZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_d2DoypowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampGreen_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_On" id="_d2EPAJowEeyfB_I1yU9UvA" text="DO_LampGreen := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2EPApowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_d2EPAJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_d2EPAZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_Off" id="_d2EPA5owEeyfB_I1yU9UvA" text="DO_LampWhite:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2EPBZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_d2EPA5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_d2EPBJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_On" id="_d2EPBpowEeyfB_I1yU9UvA" text="DO_LampWhite:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2EPCJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="18" structuredText="_d2EPBpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_d2EPB5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.32 //@resources.0/@pous.33" identifier="OperationPanelExtended" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OperationPanelExtended">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_EmergencyStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_StartButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_AutomaticButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_StopButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_ResetButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampGreen" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Q1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Q2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Reset" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="OperationPanelExtended" id="_d2EPHpowEeyfB_I1yU9UvA" text="EmergencyStop := NOT DI_StopButton;&#xA;StartButton := DI_StartButton;&#xA;ManuelMode := NOT DI_AutomaticButton;&#xA;AutomaticMode := DI_AutomaticButton;&#xA;Reset := DI_ResetButton;">
        <statements xsi:type="ST:Assignment" id="_d2EPIJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_d2EPHpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:UnaryExpression" id="_d2EPH5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StopButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2EPIpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_d2EPHpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_d2EPIZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StartButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2EPJJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_d2EPHpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:UnaryExpression" id="_d2EPI5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2EPJpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_d2EPHpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2EPJZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2EPKJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="23" structuredText="_d2EPHpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Reset"/>
          <right xsi:type="STE:VariableExpression" id="_d2EPJ5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_ResetButton"/>
        </statements>
      </implementations>
      <actions name="ACT_TurnLampGreen_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_Off" id="_d2EPEpowEeyfB_I1yU9UvA" text="DO_LampGreen := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2EPFJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="21" structuredText="_d2EPEpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_d2EPE5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampGreen_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_On" id="_d2EPFZowEeyfB_I1yU9UvA" text="DO_LampGreen := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2EPF5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_d2EPFZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_d2EPFpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampReset_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampReset_Off" id="_d2EPGJowEeyfB_I1yU9UvA" text="DO_LampReset:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2EPGpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_d2EPGJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampReset"/>
            <right xsi:type="STE:Literal" id="_d2EPGZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampReset_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampReset_On" id="_d2EPG5owEeyfB_I1yU9UvA" text="DO_LampReset:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2EPHZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="18" structuredText="_d2EPG5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampReset"/>
            <right xsi:type="STE:Literal" id="_d2EPHJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.34 //@resources.0/@pous.35" identifier="OpticalSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OpticalSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPLight" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.29" identifier="PositionTransmitter" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="PositionTransmitter">
          <statements>//Hardware</statements>
        </comment>
        <outputVariables name="DI_PositionReached" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.18" identifier="Potentiometer" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Potentiometer">
          <statements>//AT STACK</statements>
          <statements>//AT STACK RFID</statements>
          <statements>//AT CONVEYOR</statements>
          <statements>//AT CONVEYOR RFID</statements>
          <statements>//AT STAMP</statements>
          <statements>//AT STAMP RFIG</statements>
        </comment>
        <comment identifier="Potentiometer">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="AI_Position" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="delta" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2EPKZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="150"/>
        </internalVariables>
        <internalVariables name="iPosStack" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2EPKpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="24310"/>
        </internalVariables>
        <internalVariables name="iPosStackRFID" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2E2EJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="23290"/>
        </internalVariables>
        <internalVariables name="iPosConveyor" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2E2EZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="15930"/>
        </internalVariables>
        <internalVariables name="iPosConveyorRFID" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2E2EpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="14890"/>
        </internalVariables>
        <internalVariables name="iPosStamp" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2E2E5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="7845"/>
        </internalVariables>
        <internalVariables name="iPosStampRFID" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2E2FJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="6810"/>
        </internalVariables>
        <outputVariables name="AtStack" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtStackRFID" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtConveyor" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtConveyorRFID" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtStamp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtStampRFID" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Potentiometer" id="_d2FdIJowEeyfB_I1yU9UvA" text="IF((iPosStack-delta) &lt; AI_Position AND AI_Position &lt; (iPosStack+delta)) THEN //AT STACK&#xA;&#x9;AtStack := TRUE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := FALSE;&#xA;ELSIF((iPosStackRFID-delta) &lt; AI_Position AND AI_Position &lt; (iPosStackRFID+delta)) THEN //AT STACK RFID&#x9;&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := TRUE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := FALSE;&#xA;ELSIF((iPosConveyor-delta) &lt; AI_Position AND AI_Position &lt; (iPosConveyor+delta)) THEN //AT CONVEYOR&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := TRUE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := FALSE;&#xA;ELSIF((iPosConveyorRFID-delta) &lt; AI_Position AND AI_Position &lt; (iPosConveyorRFID+delta)) THEN //AT CONVEYOR RFID&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := TRUE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := FALSE;&#xA;ELSIF((iPosStamp-delta) &lt; AI_Position AND AI_Position &lt; (iPosStamp+delta)) THEN //AT STAMP&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := TRUE;&#xA;&#x9;AtStampRFID := FALSE;&#xA;ELSIF((iPosStampRFID-delta) &lt; AI_Position AND AI_Position &lt; (iPosStampRFID+delta)) THEN //AT STAMP RFIG&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := TRUE;&#xA;ELSE&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := FALSE;&#x9;&#xA;END_IF">
        <statements xsi:type="ST:If" id="_d2FdlJowEeyfB_I1yU9UvA" statementType="IF" absStartLine="1" absEndLine="50" relStartLine="1" relEndLine="50" endColumnPos="5" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
          <conditionalBlocks id="_d2FdMZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="1" absEndLine="7" relStartLine="1" relEndLine="7" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_d2FdJJowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_d2FdI5owEeyfB_I1yU9UvA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2FdIZowEeyfB_I1yU9UvA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStack"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2FdIpowEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStack"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_d2FdJpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="16" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_d2FdJZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdKJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdJ5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdKpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="20" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_d2FdKZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdLJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="24" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdK5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdLpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_d2FdLZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdMJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdL5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_d2FdQpowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="8" absEndLine="14" relStartLine="8" relEndLine="14" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_d2FdNZowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_d2FdNJowEeyfB_I1yU9UvA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2FdMpowEeyfB_I1yU9UvA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStackRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2FdM5owEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStackRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_d2FdN5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_d2FdNpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdOZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="20" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdOJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdO5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="20" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_d2FdOpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdPZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="24" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdPJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdP5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_d2FdPpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdQZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdQJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_d2FdU5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="15" absEndLine="21" relStartLine="15" relEndLine="21" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_d2FdRpowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_d2FdRZowEeyfB_I1yU9UvA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2FdQ5owEeyfB_I1yU9UvA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyor"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2FdRJowEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyor"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_d2FdSJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_d2FdR5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdSpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdSZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdTJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="19" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_d2FdS5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdTpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="24" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdTZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdUJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_d2FdT5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdUpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdUZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_d2FdZJowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="22" absEndLine="28" relStartLine="22" relEndLine="28" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_d2FdV5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_d2FdVpowEeyfB_I1yU9UvA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2FdVJowEeyfB_I1yU9UvA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyorRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2FdVZowEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyorRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_d2FdWZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_d2FdWJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdW5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdWpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdXZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="20" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_d2FdXJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdX5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="23" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdXpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdYZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_d2FdYJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdY5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdYpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_d2FddZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="29" absEndLine="35" relStartLine="29" relEndLine="35" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_d2FdaJowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_d2FdZ5owEeyfB_I1yU9UvA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2FdZZowEeyfB_I1yU9UvA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStamp"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2FdZpowEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStamp"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_d2FdapowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_d2FdaZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdbJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_d2Fda5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdbpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="20" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_d2FdbZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdcJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="24" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_d2Fdb5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdcpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="16" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_d2FdcZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FddJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_d2Fdc5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_d2FdhpowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="36" absEndLine="42" relStartLine="36" relEndLine="42" endColumnPos="20" structuredText="_d2FdIJowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_d2FdeZowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_d2FdeJowEeyfB_I1yU9UvA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2FddpowEeyfB_I1yU9UvA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStampRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2Fdd5owEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStampRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_d2Fde5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="37" absEndLine="37" relStartLine="37" relEndLine="37" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_d2FdepowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdfZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdfJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2Fdf5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="20" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_d2FdfpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdgZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="24" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdgJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2Fdg5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_d2FdgpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdhZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="20" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdhJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_d2Fdk5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="43" absEndLine="49" relStartLine="43" relEndLine="49" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
            <substatements xsi:type="ST:Assignment" id="_d2FdiJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_d2Fdh5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdipowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdiZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdjJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="20" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_d2Fdi5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdjpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" startColumnPos="1" endColumnPos="24" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdjZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdkJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="17" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_d2Fdj5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_d2FdkpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="21" structuredText="_d2FdIJowEeyfB_I1yU9UvA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_d2FdkZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.15 //@resources.0/@pous.28 //@resources.0/@pous.30 //@resources.0/@pous.31 //@resources.0/@pous.34" identifier="PresenceSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_WPDetected" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27 //@resources.0/@pous.36" identifier="PressureSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="PressureSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="AI_CurrentPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.36" identifier="ProportionalValve" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AO_SetPressure" scope="VAR_INPUT" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </inputVariables>
        <comment identifier="ProportionalValve">
          <statements>//Hardware</statements>
        </comment>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.12" callers="//@resources.0/@pous.28 //@resources.0/@pous.34" identifier="Ramp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="RampFull" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <comment identifier="Ramp">
          <statements>//Hardware</statements>
        </comment>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26 //@resources.0/@pous.28" identifier="RFID" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Data_to_Write" scope="VAR_INPUT" type="DERIVED" typeName="RFID_ByteArray">
          <location/>
        </inputVariables>
        <inputVariables name="bRead" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bWrite" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bAntOFF" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bAntON" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="RFID">
          <statements>//Bit 0</statements>
          <statements>//Bit 1</statements>
          <statements>//Bit 2</statements>
          <statements>//Bit 3</statements>
          <statements>//Bit 4</statements>
          <statements>//Bit 5</statements>
          <statements>//Bit 6</statements>
          <statements>//Bit 7</statements>
        </comment>
        <comment identifier="RFID">
          <statements>//Write 0 at every Position (Deleting old Data)</statements>
          <statements>//Write on specified position specified data (here Pos:= 10, Value:=1)</statements>
        </comment>
        <comment identifier="RFID">
          <statements>//Fehlercodeauswertung</statements>
        </comment>
        <comment identifier="RFID">
          <statements>:// copy complete Data to internal Array // Set Loop-Counter to 0</statements>
          <statements>:// Read 4 Byte  // Wait until read done</statements>
          <statements>//copy data and reset command</statements>
          <statements>// Wait until Last command1 is false</statements>
          <statements>40: // increment counter // compare, if last dword copied</statements>
          <statements>50: // copy complete array back to data // set done = true</statements>
        </comment>
        <comment identifier="RFID">
          <statements>:// copy complete Data to internal Array // Set Loop-Counter to 0</statements>
          <statements>:// Write 4 Byte  // Wait until write done</statements>
          <statements>// reset command</statements>
          <statements>// Wait until Last command0 is false</statements>
          <statements>40: // increment counter // compare, if last dword copied</statements>
          <statements>50: // copy complete array back to data // set done = true</statements>
        </comment>
        <comment identifier="RFID">
          <statements>//Hardware</statements>
          <statements>//PAE</statements>
          <statements>//IO_Link Port2_in UID Byte 0</statements>
          <statements>//IO_Link Port2_in UID Byte 1</statements>
          <statements>//IO_Link Port2_in UID Byte 2</statements>
          <statements>//IO_Link Port2_in UID Byte 3</statements>
          <statements>//IO_Link Port2_in UID Byte 4</statements>
          <statements>//IO_Link Port2_in UID Byte 5</statements>
          <statements>//IO_Link Port2_in UID Byte 6</statements>
          <statements>//IO_Link Port2_in UID Byte 7</statements>
          <statements>//PAA</statements>
          <statements>//IO_Link Port2_out Antenne</statements>
          <statements>//IO_Link Port2_out Reserved_1</statements>
          <statements>//IO_Link Port2_out Reserved_2</statements>
          <statements>//IO_Link Port2_out Reserved_3</statements>
          <statements>//IO_Link Port2_out Reserved_4</statements>
          <statements>//IO_Link Port2_out Reserved_5</statements>
          <statements>//IO_Link Port2_out Reserved_6</statements>
          <statements>//Process Image Input</statements>
          <statements>//WRITE</statements>
          <statements>//READ</statements>
          <statements>//Software</statements>
          <statements>//Provces Image Output</statements>
        </comment>
        <internalVariables name="AI_Status" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_error_RFID" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Adr_H" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Adr_L" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Data_MSB" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Data_5" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Data_6" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Data_LSB" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_CMD" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Adr_H" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Adr_L" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Data_MSB" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Data_5" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Data_6" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Data_LSB" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="StausByte_CommandCode_0" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StausByte_CommandCode_1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StausByte_CommandCode_2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StausByte_CommandCode_3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StausByte_ANT_OFF_Conf" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StatusByte_RFID_Present" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StatusByte_ErrorOccured" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StatusByte_Command_executed" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CMD_Write" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2FdlZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="2#1"/>
        </internalVariables>
        <internalVariables name="CMD_Read" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2FdlpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="2#10"/>
        </internalVariables>
        <internalVariables name="CMD_Antenna_Off" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2Fdl5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="2#10000"/>
        </internalVariables>
        <internalVariables name="CMD_Antenna_On" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2FdmJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="2#0"/>
        </internalVariables>
        <internalVariables name="Step" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_d2FdmZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="10"/>
        </internalVariables>
        <internalVariables name="Counter" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="TagData" scope="VAR" type="DERIVED" typeName="RFID_ByteArray">
          <location/>
        </internalVariables>
        <internalVariables name="DataToWriteCounter" scope="VAR" type="INT" typeName="INT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="RFID_Status" scope="VAR_OUTPUT" type="BYTE" typeName="BYTE">
          <location/>
        </outputVariables>
        <outputVariables name="Error_Number" scope="VAR_OUTPUT" type="BYTE" typeName="BYTE">
          <location/>
        </outputVariables>
        <outputVariables name="Error_Code" scope="VAR_OUTPUT" type="WSTRING" typeName="wstring">
          <location/>
        </outputVariables>
        <outputVariables name="Done_Writing" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Done_Reading" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Done_Resetting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Data_Last_RFID" scope="VAR_OUTPUT" type="DERIVED" typeName="RFID_ByteArray">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="RFID" id="_d2Ju2ZowEeyfB_I1yU9UvA" text="ACT_ConvertStatusByteToBits();&#xA;ACT_ErrorCodeTranslation();">
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Ju2powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_d2Ju2ZowEeyfB_I1yU9UvA">
          <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ConvertStatusByteToBits"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2Ju25owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="26" structuredText="_d2Ju2ZowEeyfB_I1yU9UvA">
          <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ErrorCodeTranslation"/>
        </statements>
      </implementations>
      <actions name="ACT_AntennaOFF">
        <implementation xsi:type="ST:StructuredText" label="ACT_AntennaOFF" id="_d2FdmpowEeyfB_I1yU9UvA" text="AO_CMD := CMD_Antenna_Off;">
          <statements xsi:type="ST:Assignment" id="_d2FdnJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_d2FdmpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
            <right xsi:type="STE:VariableExpression" id="_d2Fdm5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Antenna_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_AntennaON">
        <implementation xsi:type="ST:StructuredText" label="ACT_AntennaON" id="_d2FdnZowEeyfB_I1yU9UvA" text="AO_CMD := CMD_Antenna_On;">
          <statements xsi:type="ST:Assignment" id="_d2Fdn5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_d2FdnZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
            <right xsi:type="STE:VariableExpression" id="_d2FdnpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Antenna_On"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ConvertStatusByteToBits">
        <implementation xsi:type="ST:StructuredText" label="ACT_ConvertStatusByteToBits" id="_d2GEMJowEeyfB_I1yU9UvA" text="//Bit 0&#xA;IF((AI_Status AND 1)=1) THEN&#xA;&#x9;StausByte_CommandCode_0 := TRUE;&#xA;ELSE&#xA;&#x9;StausByte_CommandCode_0 := FALSE;&#xA;END_IF&#xA;//Bit 1&#xA;IF((AI_Status AND 2)=2) THEN&#xA;&#x9;StausByte_CommandCode_1 := TRUE;&#xA;ELSE&#xA;&#x9;StausByte_CommandCode_1 := FALSE;&#xA;END_IF&#xA;//Bit 2&#xA;IF((AI_Status AND 4)=4) THEN&#xA;&#x9;StausByte_CommandCode_2 := TRUE;&#xA;ELSE&#xA;&#x9;StausByte_CommandCode_2 := FALSE;&#xA;END_IF&#xA;//Bit 3&#xA;IF((AI_Status AND 8)=8) THEN&#xA;&#x9;StausByte_CommandCode_3 := TRUE;&#xA;ELSE&#xA;&#x9;StausByte_CommandCode_3 := FALSE;&#xA;END_IF&#xA;//Bit 4&#xA;IF((AI_Status AND 16)=16) THEN&#xA;&#x9;StausByte_ANT_OFF_Conf := TRUE;&#xA;ELSE&#xA;&#x9;StausByte_ANT_OFF_Conf := FALSE;&#xA;END_IF&#xA;//Bit 5&#xA;IF((AI_Status AND 32)=32) THEN&#xA;&#x9;StatusByte_RFID_Present := TRUE;&#xA;ELSE&#xA;&#x9;StatusByte_RFID_Present := FALSE;&#xA;END_IF&#xA;//Bit 6&#xA;IF((AI_Status AND 64)=64) THEN&#xA;&#x9;StatusByte_ErrorOccured := TRUE;&#xA;ELSE&#xA;&#x9;StatusByte_ErrorOccured := FALSE;&#xA;END_IF&#xA;//Bit 7&#xA;IF((AI_Status AND 128)=128) THEN&#xA;&#x9;StatusByte_Command_executed := TRUE;&#xA;ELSE&#xA;&#x9;StatusByte_Command_executed := FALSE;&#xA;END_IF">
          <statements xsi:type="ST:If" id="_d2GEOpowEeyfB_I1yU9UvA" statementType="IF" absStartLine="2" absEndLine="6" relStartLine="2" relEndLine="6" endColumnPos="5" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2GENpowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="2" absEndLine="3" relStartLine="2" relEndLine="3" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2GEM5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2GEMpowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2GEMZowEeyfB_I1yU9UvA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2GENZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_0"/>
                <right xsi:type="STE:Literal" id="_d2GENJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2GEOZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="4" absEndLine="5" relStartLine="4" relEndLine="5" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
              <substatements xsi:type="ST:Assignment" id="_d2GEOJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_0"/>
                <right xsi:type="STE:Literal" id="_d2GEN5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_d2GERJowEeyfB_I1yU9UvA" statementType="IF" absStartLine="8" absEndLine="12" relStartLine="8" relEndLine="12" endColumnPos="5" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2GEQJowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="8" absEndLine="9" relStartLine="8" relEndLine="9" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2GEPZowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2GEPJowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2GEO5owEeyfB_I1yU9UvA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2GEP5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_1"/>
                <right xsi:type="STE:Literal" id="_d2GEPpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2GEQ5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="11" relStartLine="10" relEndLine="11" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
              <substatements xsi:type="ST:Assignment" id="_d2GEQpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_1"/>
                <right xsi:type="STE:Literal" id="_d2GEQZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_d2GETpowEeyfB_I1yU9UvA" statementType="IF" absStartLine="14" absEndLine="18" relStartLine="14" relEndLine="18" endColumnPos="5" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2GESpowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="14" absEndLine="15" relStartLine="14" relEndLine="15" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2GER5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2GERpowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2GERZowEeyfB_I1yU9UvA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="4"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="4"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2GESZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_2"/>
                <right xsi:type="STE:Literal" id="_d2GESJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2GETZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="16" absEndLine="17" relStartLine="16" relEndLine="17" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
              <substatements xsi:type="ST:Assignment" id="_d2GETJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_2"/>
                <right xsi:type="STE:Literal" id="_d2GES5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_d2GEWJowEeyfB_I1yU9UvA" statementType="IF" absStartLine="20" absEndLine="24" relStartLine="20" relEndLine="24" endColumnPos="5" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2GEVJowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="21" relStartLine="20" relEndLine="21" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2GEUZowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2GEUJowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2GET5owEeyfB_I1yU9UvA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="8"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="8"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2GEU5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_3"/>
                <right xsi:type="STE:Literal" id="_d2GEUpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2GEV5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="22" absEndLine="23" relStartLine="22" relEndLine="23" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
              <substatements xsi:type="ST:Assignment" id="_d2GEVpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_3"/>
                <right xsi:type="STE:Literal" id="_d2GEVZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_d2GEYpowEeyfB_I1yU9UvA" statementType="IF" absStartLine="26" absEndLine="30" relStartLine="26" relEndLine="30" endColumnPos="5" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2GEXpowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="26" absEndLine="27" relStartLine="26" relEndLine="27" endColumnPos="31" structuredText="_d2GEMJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2GEW5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2GEWpowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2GEWZowEeyfB_I1yU9UvA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="16"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="16"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2GEXZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="31" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_ANT_OFF_Conf"/>
                <right xsi:type="STE:Literal" id="_d2GEXJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2GEYZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="28" absEndLine="29" relStartLine="28" relEndLine="29" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
              <substatements xsi:type="ST:Assignment" id="_d2GEYJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_ANT_OFF_Conf"/>
                <right xsi:type="STE:Literal" id="_d2GEX5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_d2GEbJowEeyfB_I1yU9UvA" statementType="IF" absStartLine="32" absEndLine="36" relStartLine="32" relEndLine="36" endColumnPos="5" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2GEaJowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="32" absEndLine="33" relStartLine="32" relEndLine="33" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2GEZZowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2GEZJowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2GEY5owEeyfB_I1yU9UvA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="32"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="32"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2GEZ5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_RFID_Present"/>
                <right xsi:type="STE:Literal" id="_d2GEZpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2GEa5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="34" absEndLine="35" relStartLine="34" relEndLine="35" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
              <substatements xsi:type="ST:Assignment" id="_d2GEapowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_RFID_Present"/>
                <right xsi:type="STE:Literal" id="_d2GEaZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_d2GEdpowEeyfB_I1yU9UvA" statementType="IF" absStartLine="38" absEndLine="42" relStartLine="38" relEndLine="42" endColumnPos="5" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2GEcpowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="38" absEndLine="39" relStartLine="38" relEndLine="39" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2GEb5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2GEbpowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2GEbZowEeyfB_I1yU9UvA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="64"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="64"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2GEcZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="32" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_ErrorOccured"/>
                <right xsi:type="STE:Literal" id="_d2GEcJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2GEdZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="40" absEndLine="41" relStartLine="40" relEndLine="41" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
              <substatements xsi:type="ST:Assignment" id="_d2GEdJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="33" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_ErrorOccured"/>
                <right xsi:type="STE:Literal" id="_d2GEc5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_d2GEgJowEeyfB_I1yU9UvA" statementType="IF" absStartLine="44" absEndLine="48" relStartLine="44" relEndLine="48" endColumnPos="5" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2GEfJowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="44" absEndLine="45" relStartLine="44" relEndLine="45" endColumnPos="36" structuredText="_d2GEMJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2GEeZowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2GEeJowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2GEd5owEeyfB_I1yU9UvA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="128"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="128"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2GEe5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="36" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_Command_executed"/>
                <right xsi:type="STE:Literal" id="_d2GEepowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2GEf5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="46" absEndLine="47" relStartLine="46" relEndLine="47" endColumnPos="37" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
              <substatements xsi:type="ST:Assignment" id="_d2GEfpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" startColumnPos="1" endColumnPos="37" structuredText="_d2GEMJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_Command_executed"/>
                <right xsi:type="STE:Literal" id="_d2GEfZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_CreateDataToWirte">
        <implementation xsi:type="ST:StructuredText" label="ACT_CreateDataToWirte" id="_d2GrQJowEeyfB_I1yU9UvA" text="//Write 0 at every Position (Deleting old Data)&#xA;IF(DataToWriteCounter&lt;=127)THEN&#xA;&#x9;Data_to_Write.RFID_Data[DataToWriteCounter]:= INT_TO_BYTE(0);&#xA;&#x9;DataToWriteCounter := DataToWriteCounter +1;&#xA;END_IF&#xA;//Write on specified position specified data (here Pos:= 10, Value:=1)&#xA;Data_to_Write.RFID_Data[2]:= INT_TO_BYTE(1);">
          <statements xsi:type="ST:If" id="_d2GrSpowEeyfB_I1yU9UvA" statementType="IF" absStartLine="2" absEndLine="5" relStartLine="2" relEndLine="5" endColumnPos="5" structuredText="_d2GrQJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2GrSZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="2" absEndLine="4" relStartLine="2" relEndLine="4" endColumnPos="44" structuredText="_d2GrQJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2GrQpowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2GrQZowEeyfB_I1yU9UvA" operator="LESSER_EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DataToWriteCounter"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="127"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2GrRpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="61" structuredText="_d2GrQJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:VariableExpression" id="_d2GrQ5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DataToWriteCounter"/>
                  </innerVariable>
                </left>
                <right xsi:type="STE:FunctionCallExpression" id="_d2GrRZowEeyfB_I1yU9UvA" expressionType="FUNCTION_CALL" symbol="INT_TO_BYTE">
                  <parameters>
                    <assignedValue xsi:type="STE:Literal" id="_d2GrRJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
                  </parameters>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2GrSJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="44" structuredText="_d2GrQJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DataToWriteCounter"/>
                <right xsi:type="STE:BinaryExpression" id="_d2GrR5owEeyfB_I1yU9UvA" operator="ADD">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DataToWriteCounter"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                </right>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2GrTpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="43" structuredText="_d2GrQJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                <arrayIndices xsi:type="STE:Literal" id="_d2GrS5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
              </innerVariable>
            </left>
            <right xsi:type="STE:FunctionCallExpression" id="_d2GrTZowEeyfB_I1yU9UvA" expressionType="FUNCTION_CALL" symbol="INT_TO_BYTE">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2GrTJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
              </parameters>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ErrorCodeTranslation">
        <implementation xsi:type="ST:StructuredText" label="ACT_ErrorCodeTranslation" id="_d2H5YJowEeyfB_I1yU9UvA" text="Error_Number:=AI_error_RFID;&#xA;&#xA;//Fehlercodeauswertung&#xA;IF(Error_Number=0)THEN&#xA;&#x9;Error_Code := &quot;no Error&quot;;&#xA;ELSIF(Error_Number=1)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Presence Error&quot;;&#x9;&#xA;ELSIF(Error_Number=5)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Parameterization Error&quot;;&#x9;&#xA;ELSIF(Error_Number=6)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Air interface disturbed&quot;;&#xA;ELSIF(Error_Number=12)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Memory Error&quot;;&#xA;ELSIF(Error_Number=13)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Error with the indicated storage adress&quot;;&#x9;&#xA;ELSIF(Error_Number=19)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Buffer Overflow&quot;;&#xA;ELSIF(Error_Number=20)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Serious System Error&quot;;&#xA;ELSIF(Error_Number=21)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Parameterization Error in the RESET-Command&quot;;&#xA;ELSIF(Error_Number=24)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Only RESET-Command allowed&quot;;&#xA;ELSIF(Error_Number=25)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Previous command is still active&quot;;&#xA;ELSIF(Error_Number=28)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Antenna is allready ON/OFF&quot;;&#xA;ELSIF(Error_Number=30)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Wronge number of signs in the telegram&quot;;&#xA;END_IF">
          <statements xsi:type="ST:Assignment" id="_d2H5YpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
            <right xsi:type="STE:VariableExpression" id="_d2H5YZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_error_RFID"/>
          </statements>
          <statements xsi:type="ST:If" id="_d2H5pJowEeyfB_I1yU9UvA" statementType="IF" absStartLine="4" absEndLine="30" relStartLine="4" relEndLine="30" endColumnPos="5" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2H5Z5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="4" absEndLine="5" relStartLine="4" relEndLine="5" endColumnPos="25" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5ZJowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5Y5owEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="0"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5ZpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="25" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5ZZowEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;no Error&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5bJowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="7" relStartLine="6" relEndLine="7" endColumnPos="31" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5aZowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5aJowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5a5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="31" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5apowEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Presence Error&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5cZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="8" absEndLine="9" relStartLine="8" relEndLine="9" endColumnPos="39" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5bpowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5bZowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="5"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5cJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="39" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5b5owEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Parameterization Error&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5dpowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="11" relStartLine="10" relEndLine="11" endColumnPos="40" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5c5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5cpowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="6"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5dZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="40" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5dJowEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Air interface disturbed&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5e5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="12" absEndLine="13" relStartLine="12" relEndLine="13" endColumnPos="29" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5eJowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5d5owEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5epowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="29" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5eZowEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Memory Error&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5gJowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="14" absEndLine="15" relStartLine="14" relEndLine="15" endColumnPos="56" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5fZowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5fJowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="13"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5f5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="56" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5fpowEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Error with the indicated storage adress&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5hZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="16" absEndLine="17" relStartLine="16" relEndLine="17" endColumnPos="32" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5gpowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5gZowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="19"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5hJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="32" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5g5owEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Buffer Overflow&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5ipowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="18" absEndLine="19" relStartLine="18" relEndLine="19" endColumnPos="37" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5h5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5hpowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="20"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5iZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="37" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5iJowEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Serious System Error&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5j5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="21" relStartLine="20" relEndLine="21" endColumnPos="60" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5jJowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5i5owEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="21"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5jpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="60" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5jZowEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Parameterization Error in the RESET-Command&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5lJowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="22" absEndLine="23" relStartLine="22" relEndLine="23" endColumnPos="43" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5kZowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5kJowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="24"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5k5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="43" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5kpowEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Only RESET-Command allowed&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5mZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="24" absEndLine="25" relStartLine="24" relEndLine="25" endColumnPos="49" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5lpowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5lZowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="25"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5mJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="49" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5l5owEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Previous command is still active&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5npowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="26" absEndLine="27" relStartLine="26" relEndLine="27" endColumnPos="43" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5m5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5mpowEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="28"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5nZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="43" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5nJowEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Antenna is allready ON/OFF&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2H5o5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="28" absEndLine="29" relStartLine="28" relEndLine="29" endColumnPos="55" structuredText="_d2H5YJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2H5oJowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2H5n5owEeyfB_I1yU9UvA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="30"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2H5opowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="55" structuredText="_d2H5YJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_d2H5oZowEeyfB_I1yU9UvA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Wronge number of signs in the telegram&quot;"/>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Read_Write_Test">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Read_Write_Test">
          <steps name="Init_ACT_Read_Write_Test" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.0 //@resources.0/@pous.16/@actions.5/@implementation/@transitions.2" local_ID="0" initialStep="true"/>
          <steps name="Read" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.1" local_ID="4" stepLevel="1"/>
          <steps name="Write" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.3" local_ID="9" stepLevel="1"/>
          <transitions condition="NOT Done_Reading AND StatusByte_RFID_Present AND bRead" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.1" local_ID="3"/>
          <transitions condition="Done_Reading" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" local_ID="6"/>
          <transitions condition="NOT Done_Writing AND StatusByte_RFID_Present AND bWrite" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Done_Writing" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" local_ID="11"/>
        </implementation>
      </actions>
      <actions name="ACT_ReadFromRFIDTag">
        <implementation xsi:type="ST:StructuredText" label="ACT_ReadFromRFIDTag" id="_d2IgcJowEeyfB_I1yU9UvA" text="CASE Step OF &#xA;&#x9;100:// copy complete Data to internal Array // Set Loop-Counter to 0&#xA;&#x9;&#x9;Counter := 0;&#xA;&#x9;&#x9;Step := 110;&#x9;        &#xA;&#x9;        &#xA;&#x9;110:// Read 4 Byte  // Wait until read done&#xA;&#x9;&#x9;AO_Adr_L := INT_TO_BYTE(Counter); &#xA;&#x9;&#x9;AO_CMD := CMD_Read;&#xA; &#xA;&#x9;&#x9;IF(StatusByte_Command_executed AND StausByte_CommandCode_1)  THEN &#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Step := 120;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;END_IF;&#x9;        &#xA;&#xA;&#x9;120: //copy data and reset command   &#xA;&#x9;&#x9;Data_Last_RFID.RFID_Data[Counter]   := AI_Data_LSB;&#xA;&#x9;&#x9;Data_Last_RFID.RFID_Data[Counter+1] := AI_Data_6;&#xA;&#x9;&#x9;Data_Last_RFID.RFID_Data[Counter+2] := AI_Data_5;&#xA;&#x9;&#x9;Data_Last_RFID.RFID_Data[Counter+3] := AI_Data_MSB;&#xA;&#x9;&#x9;AO_CMD := CMD_Antenna_On;&#xA;&#x9;&#x9;Step := 130;&#xA;&#xA;&#x9;130: // Wait until Last command1 is false&#xA;&#x9;&#x9;IF (NOT StausByte_CommandCode_1) THEN &#xA;&#x9;&#x9;&#x9;Step := 140;&#xA;&#x9;&#x9;END_IF;&#x9;        &#xA;&#x9;        &#xA;    140: // increment counter // compare, if last dword copied&#xA;        Counter := Counter + 4;&#xA;&#x9;    IF(Counter >= 100) THEN&#xA;&#x9;&#x9;&#x9;Step := 150;&#xA;        ELSE&#xA;            Step := 110;&#xA;&#x9;&#x9;END_IF;&#xA;&#x9;        &#xA;    150: // copy complete array back to data // set done = true&#xA;        Done_Reading := TRUE;&#xA;        Step := 10;&#xA;END_CASE">
          <statements xsi:type="ST:Case" id="_d2JHwZowEeyfB_I1yU9UvA" statementType="CASE" absStartLine="1" absEndLine="38" relStartLine="1" relEndLine="38" endColumnPos="7" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
            <switch xsi:type="STE:VariableExpression" id="_d2JHgJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
            <cases id="_d2JHhpowEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="2" absEndLine="4" relStartLine="2" relEndLine="4" startColumnPos="1" endColumnPos="13" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2JHgZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="100"/>
              <substatements xsi:type="ST:Assignment" id="_d2JHg5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="2" endColumnPos="14" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                <right xsi:type="STE:Literal" id="_d2JHgpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JHhZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="2" endColumnPos="13" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_d2JHhJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="110"/>
              </substatements>
            </cases>
            <cases id="_d2JHk5owEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="6" absEndLine="12" relStartLine="6" relEndLine="12" startColumnPos="1" endColumnPos="8" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2JHh5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="110"/>
              <substatements xsi:type="ST:Assignment" id="_d2JHipowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="2" endColumnPos="34" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Adr_L"/>
                <right xsi:type="STE:FunctionCallExpression" id="_d2JHiZowEeyfB_I1yU9UvA" expressionType="FUNCTION_CALL" symbol="INT_TO_BYTE">
                  <parameters>
                    <assignedValue xsi:type="STE:VariableExpression" id="_d2JHiJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  </parameters>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JHjJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="2" endColumnPos="20" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
                <right xsi:type="STE:VariableExpression" id="_d2JHi5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Read"/>
              </substatements>
              <substatements xsi:type="ST:If" id="_d2JHkpowEeyfB_I1yU9UvA" statementType="IF" absStartLine="10" absEndLine="12" relStartLine="10" relEndLine="12" startColumnPos="2" endColumnPos="8" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <conditionalBlocks id="_d2JHkZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="11" relStartLine="10" relEndLine="11" startColumnPos="2" endColumnPos="14" structuredText="_d2IgcJowEeyfB_I1yU9UvA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_d2JHjpowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2JHjZowEeyfB_I1yU9UvA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_Command_executed"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_1"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_d2JHkJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="3" endColumnPos="14" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_d2JHj5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="120"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_d2JHpZowEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="14" absEndLine="20" relStartLine="14" relEndLine="20" startColumnPos="1" endColumnPos="13" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2JHlJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="120"/>
              <substatements xsi:type="ST:Assignment" id="_d2JHl5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="2" endColumnPos="52" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_Last_RFID">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:VariableExpression" id="_d2JHlZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  </innerVariable>
                </left>
                <right xsi:type="STE:VariableExpression" id="_d2JHlpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Data_LSB"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JHmpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="2" endColumnPos="50" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_Last_RFID">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_d2JHmJowEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                    </arrayIndices>
                  </innerVariable>
                </left>
                <right xsi:type="STE:VariableExpression" id="_d2JHmZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Data_6"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JHnZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="2" endColumnPos="50" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_Last_RFID">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_d2JHm5owEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                    </arrayIndices>
                  </innerVariable>
                </left>
                <right xsi:type="STE:VariableExpression" id="_d2JHnJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Data_5"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JHoJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="2" endColumnPos="52" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_Last_RFID">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_d2JHnpowEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="3"/>
                    </arrayIndices>
                  </innerVariable>
                </left>
                <right xsi:type="STE:VariableExpression" id="_d2JHn5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Data_MSB"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JHopowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="2" endColumnPos="26" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
                <right xsi:type="STE:VariableExpression" id="_d2JHoZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Antenna_On"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JHpJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="2" endColumnPos="13" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_d2JHo5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="130"/>
              </substatements>
            </cases>
            <cases id="_d2JHrZowEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="22" absEndLine="25" relStartLine="22" relEndLine="25" startColumnPos="1" endColumnPos="8" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2JHppowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="130"/>
              <substatements xsi:type="ST:If" id="_d2JHrJowEeyfB_I1yU9UvA" statementType="IF" absStartLine="23" absEndLine="25" relStartLine="23" relEndLine="25" startColumnPos="2" endColumnPos="8" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <conditionalBlocks id="_d2JHq5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="24" relStartLine="23" relEndLine="24" startColumnPos="2" endColumnPos="14" structuredText="_d2IgcJowEeyfB_I1yU9UvA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_d2JHqJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:UnaryExpression" id="_d2JHp5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                      <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_1"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_d2JHqpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="3" endColumnPos="14" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_d2JHqZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="140"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_d2JHupowEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="27" absEndLine="33" relStartLine="27" relEndLine="33" startColumnPos="4" endColumnPos="8" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2JHrpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="140"/>
              <substatements xsi:type="ST:Assignment" id="_d2JHsJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="8" endColumnPos="30" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                <right xsi:type="STE:BinaryExpression" id="_d2JHr5owEeyfB_I1yU9UvA" operator="ADD">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="4"/>
                </right>
              </substatements>
              <substatements xsi:type="ST:If" id="_d2JHuZowEeyfB_I1yU9UvA" statementType="IF" absStartLine="29" absEndLine="33" relStartLine="29" relEndLine="33" startColumnPos="5" endColumnPos="8" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <conditionalBlocks id="_d2JHtZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="29" absEndLine="30" relStartLine="29" relEndLine="30" startColumnPos="5" endColumnPos="14" structuredText="_d2IgcJowEeyfB_I1yU9UvA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_d2JHspowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2JHsZowEeyfB_I1yU9UvA" operator="GREATER_EQUAL">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="100"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_d2JHtJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="3" endColumnPos="14" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_d2JHs5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="150"/>
                  </substatements>
                </conditionalBlocks>
                <conditionalBlocks id="_d2JHuJowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="31" absEndLine="32" relStartLine="31" relEndLine="32" startColumnPos="8" endColumnPos="23" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                  <substatements xsi:type="ST:Assignment" id="_d2JHt5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="12" endColumnPos="23" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_d2JHtpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="110"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_d2JHwJowEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="35" absEndLine="37" relStartLine="35" relEndLine="37" startColumnPos="4" endColumnPos="18" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2JHu5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="150"/>
              <substatements xsi:type="ST:Assignment" id="_d2JHvZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="8" endColumnPos="28" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Done_Reading"/>
                <right xsi:type="STE:Literal" id="_d2JHvJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JHv5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="37" absEndLine="37" relStartLine="37" relEndLine="37" startColumnPos="8" endColumnPos="18" structuredText="_d2IgcJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_d2JHvpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="10"/>
              </substatements>
            </cases>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ResetRFID">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ResetRFID">
          <steps name="Init_ACT_ResetRFID" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_Antenna_OFF" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:ComplexAction" localId="4" qualifier="N" pouAction="//@resources.0/@pous.16/@actions.0"/>
          </steps>
          <steps name="Turn_Antenna_On" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:ComplexAction" localId="9" qualifier="N" pouAction="//@resources.0/@pous.16/@actions.1"/>
          </steps>
          <steps name="Set_Done_Resetting" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.3" local_ID="13" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" condition="//@resources.0/@pous.16/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT Done_Resetting AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="StausByte_ANT_OFF_Conf" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="NOT StausByte_ANT_OFF_Conf" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Done_Resetting" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.0" local_ID="17"/>
        </implementation>
      </actions>
      <actions name="ACT_WriteOnRFIDTag">
        <implementation xsi:type="ST:StructuredText" label="ACT_WriteOnRFIDTag" id="_d2JukJowEeyfB_I1yU9UvA" text="CASE Step OF &#xA;&#x9;200:// copy complete Data to internal Array // Set Loop-Counter to 0&#xA;&#x9;&#x9;Counter := 0;&#xA;&#x9;&#x9;Step := 210;&#x9;        &#xA;&#x9;        &#xA;&#x9;210:// Write 4 Byte  // Wait until write done&#xA;&#x9;&#x9;AO_Adr_L := INT_TO_BYTE(Counter); &#xA;&#x9;&#x9;AO_Data_LSB := Data_to_Write.RFID_Data[Counter];&#xA;&#x9;&#x9;AO_Data_6   := Data_to_Write.RFID_Data[Counter+1];&#xA;&#x9;&#x9;AO_Data_5   := Data_to_Write.RFID_Data[Counter+2];&#xA;&#x9;&#x9;AO_Data_MSB := Data_to_Write.RFID_Data[Counter+3];&#xA;&#x9;&#x9;AO_CMD := CMD_Write;&#xA; &#xA;&#x9;&#x9;IF(StatusByte_Command_executed AND StausByte_CommandCode_0)  THEN &#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Step := 220;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;END_IF;&#x9;        &#xA;&#xA;&#x9;220: // reset command    &#xA;&#x9;&#x9;AO_CMD := CMD_Antenna_On;&#xA;&#x9;&#x9;Step := 230;&#xA;&#xA;&#x9;230: // Wait until Last command0 is false&#xA;&#x9;&#x9;IF (NOT StausByte_CommandCode_0) THEN &#xA;&#x9;&#x9;&#x9;Step := 240;&#xA;&#x9;&#x9;END_IF;&#x9;        &#xA;&#x9;        &#xA;    240: // increment counter // compare, if last dword copied&#xA;        Counter := Counter + 4;&#xA;&#x9;    IF(Counter >= 100) THEN&#xA;&#x9;&#x9;&#x9;Step := 250;&#xA;        ELSE&#xA;            Step := 210;&#xA;&#x9;&#x9;END_IF;&#xA;&#x9;        &#xA;    250: // copy complete array back to data // set done = true&#xA;        Done_Writing := TRUE;&#xA;        Step := 10;&#xA;END_CASE">
          <statements xsi:type="ST:Case" id="_d2Ju0powEeyfB_I1yU9UvA" statementType="CASE" absStartLine="1" absEndLine="38" relStartLine="1" relEndLine="38" endColumnPos="7" structuredText="_d2JukJowEeyfB_I1yU9UvA">
            <switch xsi:type="STE:VariableExpression" id="_d2JukZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
            <cases id="_d2Jul5owEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="2" absEndLine="4" relStartLine="2" relEndLine="4" startColumnPos="1" endColumnPos="13" structuredText="_d2JukJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2JukpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="200"/>
              <substatements xsi:type="ST:Assignment" id="_d2JulJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="2" endColumnPos="14" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                <right xsi:type="STE:Literal" id="_d2Juk5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JulpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="2" endColumnPos="13" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_d2JulZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="210"/>
              </substatements>
            </cases>
            <cases id="_d2JusJowEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="6" absEndLine="16" relStartLine="6" relEndLine="16" startColumnPos="1" endColumnPos="8" structuredText="_d2JukJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2JumJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="210"/>
              <substatements xsi:type="ST:Assignment" id="_d2Jum5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="2" endColumnPos="34" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Adr_L"/>
                <right xsi:type="STE:FunctionCallExpression" id="_d2JumpowEeyfB_I1yU9UvA" expressionType="FUNCTION_CALL" symbol="INT_TO_BYTE">
                  <parameters>
                    <assignedValue xsi:type="STE:VariableExpression" id="_d2JumZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  </parameters>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JunpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="2" endColumnPos="49" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Data_LSB"/>
                <right xsi:type="STE:VariableExpression" id="_d2JunZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:VariableExpression" id="_d2JunJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  </innerVariable>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JuoZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="2" endColumnPos="51" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Data_6"/>
                <right xsi:type="STE:VariableExpression" id="_d2JuoJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_d2Jun5owEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                    </arrayIndices>
                  </innerVariable>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JupJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="2" endColumnPos="51" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Data_5"/>
                <right xsi:type="STE:VariableExpression" id="_d2Juo5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_d2JuopowEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                    </arrayIndices>
                  </innerVariable>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2Jup5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="2" endColumnPos="51" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Data_MSB"/>
                <right xsi:type="STE:VariableExpression" id="_d2JuppowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_d2JupZowEeyfB_I1yU9UvA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="3"/>
                    </arrayIndices>
                  </innerVariable>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JuqZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="2" endColumnPos="21" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
                <right xsi:type="STE:VariableExpression" id="_d2JuqJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Write"/>
              </substatements>
              <substatements xsi:type="ST:If" id="_d2Jur5owEeyfB_I1yU9UvA" statementType="IF" absStartLine="14" absEndLine="16" relStartLine="14" relEndLine="16" startColumnPos="2" endColumnPos="8" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <conditionalBlocks id="_d2JurpowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="14" absEndLine="15" relStartLine="14" relEndLine="15" startColumnPos="2" endColumnPos="14" structuredText="_d2JukJowEeyfB_I1yU9UvA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_d2Juq5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2JuqpowEeyfB_I1yU9UvA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_Command_executed"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_0"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_d2JurZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="3" endColumnPos="14" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_d2JurJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="220"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_d2JutpowEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="18" absEndLine="20" relStartLine="18" relEndLine="20" startColumnPos="1" endColumnPos="13" structuredText="_d2JukJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2JusZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="220"/>
              <substatements xsi:type="ST:Assignment" id="_d2Jus5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="2" endColumnPos="26" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
                <right xsi:type="STE:VariableExpression" id="_d2JuspowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Antenna_On"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2JutZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="2" endColumnPos="13" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_d2JutJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="230"/>
              </substatements>
            </cases>
            <cases id="_d2JuvpowEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="22" absEndLine="25" relStartLine="22" relEndLine="25" startColumnPos="1" endColumnPos="8" structuredText="_d2JukJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2Jut5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="230"/>
              <substatements xsi:type="ST:If" id="_d2JuvZowEeyfB_I1yU9UvA" statementType="IF" absStartLine="23" absEndLine="25" relStartLine="23" relEndLine="25" startColumnPos="2" endColumnPos="8" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <conditionalBlocks id="_d2JuvJowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="24" relStartLine="23" relEndLine="24" startColumnPos="2" endColumnPos="14" structuredText="_d2JukJowEeyfB_I1yU9UvA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_d2JuuZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:UnaryExpression" id="_d2JuuJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                      <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_0"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_d2Juu5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="3" endColumnPos="14" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_d2JuupowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="240"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_d2Juy5owEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="27" absEndLine="33" relStartLine="27" relEndLine="33" startColumnPos="4" endColumnPos="8" structuredText="_d2JukJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2Juv5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="240"/>
              <substatements xsi:type="ST:Assignment" id="_d2JuwZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="8" endColumnPos="30" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                <right xsi:type="STE:BinaryExpression" id="_d2JuwJowEeyfB_I1yU9UvA" operator="ADD">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="4"/>
                </right>
              </substatements>
              <substatements xsi:type="ST:If" id="_d2JuypowEeyfB_I1yU9UvA" statementType="IF" absStartLine="29" absEndLine="33" relStartLine="29" relEndLine="33" startColumnPos="5" endColumnPos="8" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <conditionalBlocks id="_d2JuxpowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="29" absEndLine="30" relStartLine="29" relEndLine="30" startColumnPos="5" endColumnPos="14" structuredText="_d2JukJowEeyfB_I1yU9UvA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_d2Juw5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2JuwpowEeyfB_I1yU9UvA" operator="GREATER_EQUAL">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="100"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_d2JuxZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="3" endColumnPos="14" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_d2JuxJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="250"/>
                  </substatements>
                </conditionalBlocks>
                <conditionalBlocks id="_d2JuyZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="31" absEndLine="32" relStartLine="31" relEndLine="32" startColumnPos="8" endColumnPos="23" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                  <substatements xsi:type="ST:Assignment" id="_d2JuyJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="12" endColumnPos="23" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_d2Jux5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="210"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_d2Ju0ZowEeyfB_I1yU9UvA" statementType="CASE_BLOCK" absStartLine="35" absEndLine="37" relStartLine="35" relEndLine="37" startColumnPos="4" endColumnPos="18" structuredText="_d2JukJowEeyfB_I1yU9UvA">
              <caseExpressions xsi:type="STE:Literal" id="_d2JuzJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="250"/>
              <substatements xsi:type="ST:Assignment" id="_d2JuzpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="8" endColumnPos="28" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Done_Writing"/>
                <right xsi:type="STE:Literal" id="_d2JuzZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2Ju0JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="37" absEndLine="37" relStartLine="37" relEndLine="37" startColumnPos="8" endColumnPos="18" structuredText="_d2JukJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_d2Juz5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="10"/>
              </substatements>
            </cases>
          </statements>
        </implementation>
      </actions>
      <actions name="Read_entry">
        <implementation xsi:type="ST:StructuredText" label="Read_entry" id="_d2Ju05owEeyfB_I1yU9UvA" text="Step := 100;">
          <statements xsi:type="ST:Assignment" id="_d2Ju1ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="11" structuredText="_d2Ju05owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
            <right xsi:type="STE:Literal" id="_d2Ju1JowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="100"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Write_entry">
        <implementation xsi:type="ST:StructuredText" label="Write_entry" id="_d2Ju1powEeyfB_I1yU9UvA" text="Step := 200;">
          <statements xsi:type="ST:Assignment" id="_d2Ju2JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="11" structuredText="_d2Ju1powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
            <right xsi:type="STE:Literal" id="_d2Ju15owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="200"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.30 //@resources.0/@pous.31 //@resources.0/@pous.34" identifier="Switch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Switch">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" condition="//@resources.0/@pous.17/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" condition="//@resources.0/@pous.17/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" condition="//@resources.0/@pous.17/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" condition="//@resources.0/@pous.17/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.3 //@resources.0/@pous.6 //@resources.0/@pous.4 //@resources.0/@pous.11" callers="//@resources.0/@pous.26" identifier="TurningTable" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="TurningTable">
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="AtStackInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="BetweenStackConveyor" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtConveyorInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="BetweenConveyorStamp" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtStampInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <outputVariables name="Motor" scope="VAR_OUTPUT" type="DERIVED" typeName="Motor">
          <location/>
        </outputVariables>
        <outputVariables name="AtStack" scope="VAR_OUTPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </outputVariables>
        <outputVariables name="AtConveyor" scope="VAR_OUTPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </outputVariables>
        <outputVariables name="AtStamp" scope="VAR_OUTPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </outputVariables>
        <outputVariables name="Potentiometer" scope="VAR_OUTPUT" type="DERIVED" typeName="Potentiometer">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="TurningTable" id="_d2KVoJowEeyfB_I1yU9UvA" text="Potentiometer();">
        <statements xsi:type="ST:FunctionCallStatement" id="_d2KVoZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="15" structuredText="_d2KVoJowEeyfB_I1yU9UvA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Potentiometer"/>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.28" identifier="UltrasonicSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_UltraSonic" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.22 //@resources.0/@pous.23" callers="//@resources.0/@pous.26" identifier="VacuumGripper" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Valve" scope="VAR_INPUT" type="DERIVED" typeName="Valve">
          <location/>
        </inputVariables>
        <inputVariables name="VacuumSwitch" scope="VAR_INPUT" type="DERIVED" typeName="VacuumSwitch">
          <location/>
        </inputVariables>
        <comment identifier="VacuumGripper">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="AI_VacuumSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryVacuumPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Intaken" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Released" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Intake">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Intake">
          <steps name="Init_ACT_Intake" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOn" incomingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPTakenIn" incomingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" condition="//@resources.0/@pous.20/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Intaken AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Intaken" isJump="true" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
      <actions name="ACT_Release">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Release">
          <steps name="Init_ACT_Release" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOff" incomingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPReleased" incomingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" condition="//@resources.0/@pous.20/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Released AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Released" isJump="true" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.22 //@resources.0/@pous.23" callers="//@resources.0/@pous.29" identifier="VacuumGripperExtended" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Valve" scope="VAR_INPUT" type="DERIVED" typeName="Valve">
          <location/>
        </inputVariables>
        <inputVariables name="VacuumSwitch" scope="VAR_INPUT" type="DERIVED" typeName="VacuumSwitch">
          <location/>
        </inputVariables>
        <comment identifier="VacuumGripperExtended">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="VacuumHit" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryVacuumPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Intaken" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Released" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Intake">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Intake">
          <steps name="Init_ACT_Intake" outgoingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOn" incomingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPTakenIn" incomingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" condition="//@resources.0/@pous.21/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Intaken AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Intaken" isJump="true" sourceStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
      <actions name="ACT_Release">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Release">
          <steps name="Init_ACT_Release" outgoingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOff" incomingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="N" condition="//@resources.0/@pous.21/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="SetWPReleased" incomingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" condition="//@resources.0/@pous.21/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Released AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT VacuumSwitch.DI_TakenIn AND TurnVacuumOff.t>T#250ms" sourceStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Released" isJump="true" sourceStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.20 //@resources.0/@pous.21" identifier="VacuumSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="VacuumSwitch">
          <statements>//Hardware</statements>
        </comment>
        <outputVariables name="DI_TakenIn" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.20 //@resources.0/@pous.21" identifier="Valve" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Valve">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_VacuumOn" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
      <actions name="ACT_TurnVacuumOff">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOff" id="_d2KVopowEeyfB_I1yU9UvA" text="DO_VacuumOn := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2KVpJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_d2KVopowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_d2KVo5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnVacuumOn">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOn" id="_d2KVpZowEeyfB_I1yU9UvA" text="DO_VacuumOn := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2KVp5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_d2KVpZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_d2KVppowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.37" identifier="ValveBlock" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_SetBlockPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
      <actions name="ACT_BlockadeBlockPressure">
        <implementation xsi:type="ST:StructuredText" label="ACT_BlockadeBlockPressure" id="_d2KVqJowEeyfB_I1yU9UvA" text="DO_SetBlockPressure := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2KVqpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_d2KVqJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_SetBlockPressure"/>
            <right xsi:type="STE:Literal" id="_d2KVqZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ReleaseBlockPressure">
        <implementation xsi:type="ST:StructuredText" label="ACT_ReleaseBlockPressure" id="_d2KVq5owEeyfB_I1yU9UvA" text="DO_SetBlockPressure := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2KVrZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_d2KVq5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_SetBlockPressure"/>
            <right xsi:type="STE:Literal" id="_d2KVrJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.35" identifier="WeightModule" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_WPWeight" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.5 //@resources.0/@pous.20 //@resources.0/@pous.18 //@resources.0/@pous.16" callers="//@resources.0/@pous.37" identifier="Crane" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="bSR" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bCR" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bStR" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripper">
          <location/>
        </inputVariables>
        <inputVariables name="Table" scope="VAR_INPUT" type="DERIVED" typeName="TurningTable">
          <location/>
        </inputVariables>
        <inputVariables name="RFID" scope="VAR_INPUT" type="DERIVED" typeName="RFID">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPProvided" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Black" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_White" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Metallic" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_IsStamping" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_WPAvailable" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_RefillConveyor_IsSending" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Crane">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="CraneSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStack" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStackRFID" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedConveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedConveyorRFID" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStamp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStampRFID" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Stamp_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPPickedUp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Crane" id="_d2LjwJowEeyfB_I1yU9UvA" text="Table();&#xA;Check_Stack_WPProvided := Main.Stack_WPProvided;&#xA;Check_Stack_WPType_Black := Main.Stack_WPType_Black;&#xA;Check_Stack_WPType_White := Main.Stack_WPType_White;&#xA;Check_Stack_WPType_Metallic := Main.Stack_WPType_Metallic;&#xA;Check_LargeSortingConveyor_IsSorting := Main.LargeSortingConveyor_IsSorting;&#xA;Check_LargeSortingConveyor_AutomaticExecuteCompleted := Main.LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;Check_Stamp_IsStamping := Main.Stamp_IsStamping;&#xA;Check_Stamp_WPAvailable := Main.Stamp_WPAvailable;&#xA;Check_Stamp_AutomaticExecuteCompleted := Main.Stamp_AutomaticExecuteCompleted;&#xA;Check_RefillConveyor_IsSending := Main.Check_RefillConveyor_IsSending;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Table.Motor.ACT_Stop();&#xA;END_IF&#xA;&#xA;IF(bSR AND NOT ReachedStackRFID)THEN&#xA;&#x9;ACT_MoveToStackRFID();&#xA;END_IF&#xA;IF(bCR AND NOT ReachedConveyorRFID)THEN&#xA;&#x9;ACT_MoveToConveyorRFID();&#xA;END_IF&#xA;IF(bStR AND NOT ReachedStampRFID)THEN&#xA;&#x9;ACT_MoveToStampRFID();&#xA;END_IF">
        <statements xsi:type="ST:FunctionCallStatement" id="_d2LjwZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Table"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Ljw5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="47" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_d2LjwpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2LjxZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="51" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_d2LjxJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Ljx5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="51" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_d2LjxpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2LjyZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="57" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_d2LjyJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Ljy5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="75" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_d2LjypowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2LjzZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="107" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2LjzJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Ljz5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="47" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_d2LjzpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Lj0ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="49" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_d2Lj0JowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Lj05owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="77" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2Lj0powEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Lj1ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="69" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_d2Lj1JowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Lj15owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="39" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2Lj1powEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_d2Lj25owEeyfB_I1yU9UvA" statementType="IF" absStartLine="13" absEndLine="15" relStartLine="13" relEndLine="15" endColumnPos="5" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <conditionalBlocks id="_d2Lj2powEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="13" absEndLine="14" relStartLine="13" relEndLine="14" endColumnPos="23" structuredText="_d2LjwJowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_d2Lj2JowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_d2Lj2ZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="23" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </invokingVariable>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
        <statements xsi:type="ST:If" id="_d2Lj4JowEeyfB_I1yU9UvA" statementType="IF" absStartLine="17" absEndLine="19" relStartLine="17" relEndLine="19" endColumnPos="5" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <conditionalBlocks id="_d2Lj35owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="17" absEndLine="18" relStartLine="17" relEndLine="18" endColumnPos="22" structuredText="_d2LjwJowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_d2Lj3ZowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_d2Lj3JowEeyfB_I1yU9UvA" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="bSR"/>
                <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStackRFID"/>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:FunctionCallStatement" id="_d2Lj3powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="22" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStackRFID"/>
            </substatements>
          </conditionalBlocks>
        </statements>
        <statements xsi:type="ST:If" id="_d2Lj5ZowEeyfB_I1yU9UvA" statementType="IF" absStartLine="20" absEndLine="22" relStartLine="20" relEndLine="22" endColumnPos="5" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <conditionalBlocks id="_d2Lj5JowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="21" relStartLine="20" relEndLine="21" endColumnPos="25" structuredText="_d2LjwJowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_d2Lj4powEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_d2Lj4ZowEeyfB_I1yU9UvA" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="bCR"/>
                <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedConveyorRFID"/>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:FunctionCallStatement" id="_d2Lj45owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="25" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyorRFID"/>
            </substatements>
          </conditionalBlocks>
        </statements>
        <statements xsi:type="ST:If" id="_d2Lj6powEeyfB_I1yU9UvA" statementType="IF" absStartLine="23" absEndLine="25" relStartLine="23" relEndLine="25" endColumnPos="5" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
          <conditionalBlocks id="_d2Lj6ZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="24" relStartLine="23" relEndLine="24" endColumnPos="22" structuredText="_d2LjwJowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_d2Lj55owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_d2Lj5powEeyfB_I1yU9UvA" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="bStR"/>
                <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStampRFID"/>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:FunctionCallStatement" id="_d2Lj6JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="22" structuredText="_d2LjwJowEeyfB_I1yU9UvA">
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStampRFID"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_ConveyorAllowedToOperate" id="_d2KVrpowEeyfB_I1yU9UvA" text="Conveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2KVsJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_d2KVrpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2KVr5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_StampAllowedToOperate" id="_d2KVsZowEeyfB_I1yU9UvA" text="Stamp_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2KVs5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="31" structuredText="_d2KVsZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2KVspowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_d2KVtJowEeyfB_I1yU9UvA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;Stamp_AllowedToOperate := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedStack := FALSE;&#xA;ReachedConveyor := FALSE;&#xA;ReachedStamp := FALSE;&#x9;&#xA;WPType_White := FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2KVtpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_d2KVtZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVuJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_d2KVt5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVupowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2KVuZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVvJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="31" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2KVu5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVvpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="19" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_d2KVvZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVwJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="18" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_d2KVv5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVwpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStack"/>
            <right xsi:type="STE:Literal" id="_d2KVwZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVxJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedConveyor"/>
            <right xsi:type="STE:Literal" id="_d2KVw5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVxpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="21" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStamp"/>
            <right xsi:type="STE:Literal" id="_d2KVxZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVyJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="21" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_d2KVx5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVypowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="21" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_d2KVyZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVzJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="24" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_d2KVy5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KVzpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="23" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_d2KVzZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KV0JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="24" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_d2KVz5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KV0powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="23" structuredText="_d2KVtJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_d2KV0ZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_ConveyorAllowedToOperate" id="_d2KV05owEeyfB_I1yU9UvA" text="Conveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2KV1ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_d2KV05owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2KV1JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_StampAllowedToOperate" id="_d2KV1powEeyfB_I1yU9UvA" text="Stamp_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2KV2JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_d2KV1powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2KV15owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStack">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStack" id="_d2KV2ZowEeyfB_I1yU9UvA" text="WPType_White:=Main.Stack_WPType_White;&#xA;WPType_Black:=Main.Stack_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stack_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stack_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stack_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stack_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_d2KV25owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_d2KV2ZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_d2KV2powEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KV3ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_d2KV2ZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_d2KV3JowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KV35owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_d2KV2ZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_d2KV3powEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KV4ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_d2KV2ZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_d2KV4JowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KV45owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_d2KV2ZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_d2KV4powEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2KV5ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_d2KV2ZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_d2KV5JowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStamp">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStamp" id="_d2K8sJowEeyfB_I1yU9UvA" text="WPType_White:=Main.Stamp_WPType_White;&#xA;WPType_Black:=Main.Stamp_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stamp_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stamp_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stamp_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stamp_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_d2K8spowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_d2K8sJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_d2K8sZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2K8tJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_d2K8sJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_d2K8s5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2K8tpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_d2K8sJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_d2K8tZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2K8uJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_d2K8sJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_d2K8t5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2K8upowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_d2K8sJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_d2K8uZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2K8vJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_d2K8sJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_d2K8u5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToConveyor">
          <steps name="Init_MoveToConveyor" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.4 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedConveyor" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="First_Turn_CounterC_MTC.t>T#8s AND Not Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedConveyor" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToConveyorRFID">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToConveyorRFID">
          <steps name="Init_MoveToConveyorRFID" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTCRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTCRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC_MTCRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise_MTCRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane_MTCRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.4 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedStackRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@internalVariables.5"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue OR Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue AND Table.AtConveyor.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="First_Turn_CounterC_MTCRFID.t>T#8s AND NOT Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedConveyorRFID" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStack">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStack">
          <steps name="Init_MoveToMagazine" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_Clockwise_MTM" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Counterclockwise" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane_MTS" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStack" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_Clockwise_MTM.t>T#8s" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStack" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStackRFID">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStackRFID">
          <steps name="Init_MoveToStackRFID" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTSRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTSRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC_MTSRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise_MTSRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane_MTSRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedStackRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue OR Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue AND Table.AtConveyor.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="First_Turn_CounterC_MTSRFID.t>T#8s AND NOT Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedStackRFID" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStamp">
          <steps name="Init_MoveToStamp" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_CounterClockwise_MTSt" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.11/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Clockwise_MTSt" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane_MTSt" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStamp" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@internalVariables.6"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_CounterClockwise_MTSt.t>T#8s" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStamp" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStampRFID">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStampRFID">
          <steps name="Init_MoveToStampRFID" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_CounterClockwise_MTStRFID" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.12/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Clockwise_MTStRFID" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane_MTStRFID" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStampRFID" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@internalVariables.7"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.Potentiometer.AtStampRFID" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_CounterClockwise_MTStRFID.t>T#8s" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.Potentiometer.AtStampRFID" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStampRFID" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_PickUpWP" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_Down" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPType" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.13/@implementation/@transitions.4" local_ID="6" stepLevel="2"/>
          <steps name="WPType_Is_WPTypeStack" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WPType_Is_WPTypeStamp" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="Turn_On_Vacuum_PWU" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.13/@implementation/@transitions.8" local_ID="19" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.9" local_ID="28" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@inputVariables.7"/>
          </steps>
          <steps name="SetWPPickedUp" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.10" local_ID="35" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="36" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="WPWeight_Heavy=Main.Stack_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.5" local_ID="12"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPWeight_Heavy=Main.Stamp_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.8" local_ID="25"/>
          <transitions condition="Turn_On_Vacuum_PWU.t>T#2s AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.0" local_ID="32"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.0" local_ID="39"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_PutWPDown" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="WPWeight_Choice" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.14/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.14/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="WPLight" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="WPMedium" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="WPHeavy" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.6" local_ID="17" stepLevel="2"/>
          <steps name="Lower_Crane_PWD" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.14/@implementation/@transitions.4 //@resources.0/@pous.26/@actions.14/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.7" local_ID="21" stepLevel="3"/>
          <steps name="Put_WP_Down_1" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.8" local_ID="24" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.9" local_ID="27" stepLevel="5"/>
          <steps name="SetWPPutDown" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.10" local_ID="30" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPLight.t>T#0ms" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPMedium.t>T#1000ms" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPHeavy.t>T#2000ms" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.6" local_ID="23"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.8" local_ID="29"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Waiting_For_Stack_To_Provide_WP" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Check_WP_Type" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.15/@implementation/@transitions.13" local_ID="6" stepLevel="2"/>
          <steps name="RFID_Stack" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="Crane_To_Stamp_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.4" local_ID="13" stepLevel="4"/>
          <steps name="Pick_Up_WP_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.5" local_ID="16" stepLevel="5"/>
          <steps name="Check_RC_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Crane_Turning_To_Conveyor_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.7" local_ID="22" stepLevel="7"/>
          <steps name="Putting_Down_WP_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.8" local_ID="25" stepLevel="8"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.9" local_ID="28" stepLevel="9"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.10" local_ID="31" stepLevel="10"/>
          <steps name="CheckStamp_WPAvailable" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.11 //@resources.0/@pous.26/@actions.15/@implementation/@transitions.12" local_ID="34" stepLevel="11"/>
          <steps name="WP_Should_Be_Stamped" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.14 //@resources.0/@pous.26/@actions.15/@implementation/@transitions.24" local_ID="44" stepLevel="3"/>
          <steps name="RFID_Stack2" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.15" local_ID="48" stepLevel="4"/>
          <steps name="Crane_Turning_To_Stack_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.16" local_ID="51" stepLevel="5"/>
          <steps name="Crane_Pick_Up_Wp_2" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.17" local_ID="54" stepLevel="6"/>
          <steps name="Check_RC_2" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.18" local_ID="57" stepLevel="7"/>
          <steps name="Crane_Turning_To_Stamp_2" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.19" local_ID="60" stepLevel="8"/>
          <steps name="Crane_Put_Down_WP_2" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.20" local_ID="63" stepLevel="9"/>
          <steps name="Stamping_WP" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.21 //@resources.0/@pous.26/@actions.15/@implementation/@transitions.22" local_ID="66" stepLevel="10"/>
          <steps name="CheckStamp_AutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.21" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.23" local_ID="74" stepLevel="11"/>
          <steps name="RFID_Stamp" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.24" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.25" local_ID="79" stepLevel="4"/>
          <steps name="Crane_Turning_To_Stamp_3" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.25" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.26" local_ID="82" stepLevel="5"/>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_Stack_WPProvided" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Stack_WPType_Black" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_1.t>T#250ms" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="ReachedConveyor AND NOT Check_LargeSortingConveyor_IsSorting" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.8" local_ID="24"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.9" local_ID="27"/>
          <transitions condition="Short_Delay.t>T#50ms" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.9" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.10" local_ID="30"/>
          <transitions condition="Check_LargeSortingConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.10" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.11" local_ID="33"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.11" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.1" local_ID="37"/>
          <transitions condition="Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.11" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.22" local_ID="39"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.12" local_ID="43"/>
          <transitions condition="NOT Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.12" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.13" local_ID="47"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.13" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.14" local_ID="50"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.14" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.15" local_ID="53"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.15" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.16" local_ID="56"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_2.t>T#250ms" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.16" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.17" local_ID="59"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.17" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.18" local_ID="62"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.18" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.19" local_ID="65"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.19" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.20" local_ID="69"/>
          <transitions condition="Check_Stack_WPType_Black" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.19" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.4" local_ID="71"/>
          <transitions condition="Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.20" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.5" local_ID="76"/>
          <transitions condition="Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.12" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.21" local_ID="78"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.21" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.22" local_ID="81"/>
          <transitions condition="ReachedStamp AND NOT Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.22" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.5" local_ID="84"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Crane_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.16/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="Crane_EmergencyHandled" incomingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Table.Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Table.Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Crane_ACT_Init" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_MoveUp_Init" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.17/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Turn_To_Conveyor" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor_Init" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.5" local_ID="17" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" condition="//@resources.0/@pous.26/@declaration/@internalVariables.13"/>
          </steps>
          <steps name="Is_WP_At_Stamp" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.17/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.17/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Turn_To_Stamp_Init" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.8" local_ID="29" stepLevel="6"/>
          <steps name="PicWPFromStampUp" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.9" local_ID="32" stepLevel="7"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.10" local_ID="37" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="N" condition="//@resources.0/@pous.26/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedConveyor" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.6" local_ID="28"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.7" local_ID="31"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.0" local_ID="41"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.13 //@resources.0/@pous.38 //@resources.0/@pous.39 //@resources.0/@pous.40 //@resources.0/@pous.41 //@resources.0/@pous.42 //@resources.0/@pous.43 //@resources.0/@pous.44 //@resources.0/@pous.45" callers="//@resources.0/@pous.37" identifier="EnergyMonitor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="EnergyMonitor">
          <statements>//Hardware Input Variables</statements>
          <statements>//Hardware Output Variables</statements>
        </comment>
        <internalVariables name="BK_1_6_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="BK_2_3_7_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="BK_4_5_8_9_10_11_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="GearPoint_80l_min" scope="VAR" type="DERIVED" typeName="GearPointFlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="GearPoint_120l_min" scope="VAR" type="DERIVED" typeName="GearPointFlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="PressureSensor_4bar" scope="VAR" type="DERIVED" typeName="PressureSensor_4bar">
          <location/>
        </internalVariables>
        <internalVariables name="Flow_2to200l_min" scope="VAR" type="DERIVED" typeName="FlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="Transducer_0to10AC_0to10V" scope="VAR" type="DERIVED" typeName="A_to_V_Transducer">
          <location/>
        </internalVariables>
        <internalVariables name="ExtSensor_0to10V" scope="VAR" type="DERIVED" typeName="V_Sensor">
          <location/>
        </internalVariables>
        <internalVariables name="PressureSensor" scope="VAR" type="DERIVED" typeName="PressureSensor">
          <location/>
        </internalVariables>
        <internalVariables name="SmallContacter_left" scope="VAR" type="DERIVED" typeName="ProtectiveContact">
          <location/>
        </internalVariables>
        <internalVariables name="SmallContacter_right" scope="VAR" type="DERIVED" typeName="ProtectiveContact">
          <location/>
        </internalVariables>
        <internalVariables name="ChangeoverMagnetVaveRelay" scope="VAR" type="DERIVED" typeName="MagnetValve">
          <location/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.7 //@resources.0/@pous.6 //@resources.0/@pous.5 //@resources.0/@pous.12 //@resources.0/@pous.9 //@resources.0/@pous.2 //@resources.0/@pous.15 //@resources.0/@pous.19 //@resources.0/@pous.17 //@resources.0/@pous.16" callers="//@resources.0/@pous.37" identifier="LargeSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator1" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator2" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp1" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp1" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp1" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="UltrasonicSensor" scope="VAR_INPUT" type="DERIVED" typeName="UltrasonicSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp2" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp2" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp2" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="OptEnd" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp3" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="RFID" scope="VAR_INPUT" type="DERIVED" typeName="RFID">
          <location/>
        </inputVariables>
        <inputVariables name="OptBeginning" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorInitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorAutoamticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="LargeSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="NumberOfWPsAtConveyor" scope="VAR_OUTPUT" type="USINT" typeName="USINT">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="LargeSortingConveyor" id="_d2MK0JowEeyfB_I1yU9UvA" text="Panel();&#xA;ACT_CountWPsAtConveyor();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_AllowedToOperate := Main.Check_LargeSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyorInitCompleted := Main.Check_LargeSortingConveyor_FollowConveyorInitCompleted;&#xA;Check_FollowConveyorAutoamticExecuteCompleted := Main.Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:FunctionCallStatement" id="_d2MK0ZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_d2MK0powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
          <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CountWPsAtConveyor"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2MK1JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="32" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_d2MK05owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2MK1powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="30" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2MK1ZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2MK2JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2MK15owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2MK2powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="36" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2MK2ZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2MK3JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="74" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2MK25owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2MK3powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="96" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2MK3ZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2MK4JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="120" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2MK35owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2MK4powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="39" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2MK4ZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_d2MK5powEeyfB_I1yU9UvA" statementType="IF" absStartLine="11" absEndLine="13" relStartLine="11" relEndLine="13" endColumnPos="5" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
          <conditionalBlocks id="_d2MK5ZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="11" absEndLine="12" relStartLine="11" relEndLine="12" endColumnPos="17" structuredText="_d2MK0JowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_d2MK45owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_d2MK5JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="17" structuredText="_d2MK0JowEeyfB_I1yU9UvA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_d2Lj65owEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2Lj7ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_d2Lj65owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2Lj7JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_d2Lj7powEeyfB_I1yU9UvA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Ramp1:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp2:=FALSE;&#xA;CurrentTarget_Ramp3:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2Lj8JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_d2Lj75owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Lj8powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_d2Lj8ZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Lj9JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2Lj85owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Lj9powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_d2Lj9ZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Lj-JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_d2Lj95owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Lj-powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_d2Lj-ZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Lj_JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_d2Lj-5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Lj_powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_d2Lj_ZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2LkAJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_d2Lj_5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2LkApowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_d2LkAZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2LkBJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_d2LkA5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2LkBpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="26" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp1"/>
            <right xsi:type="STE:Literal" id="_d2LkBZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2LkCJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="29" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_d2LkB5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2LkCpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="26" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp2"/>
            <right xsi:type="STE:Literal" id="_d2LkCZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2LkDJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="26" structuredText="_d2Lj7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp3"/>
            <right xsi:type="STE:Literal" id="_d2LkC5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_d2LkDZowEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2LkD5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_d2LkDZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2LkDpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_OneWP">
        <implementation xsi:type="ST:StructuredText" label="Set_OneWP" id="_d2LkEJowEeyfB_I1yU9UvA" text="NumberOfWPsAtConveyor:=1;">
          <statements xsi:type="ST:Assignment" id="_d2LkEpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_d2LkEJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_d2LkEZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_d2LkE5owEeyfB_I1yU9UvA" text="Priority_Black := 4;">
          <statements xsi:type="ST:Assignment" id="_d2LkFZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_d2LkE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_d2LkFJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="4"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_d2LkFpowEeyfB_I1yU9UvA" text="Priority_Metallic := 3;">
          <statements xsi:type="ST:Assignment" id="_d2LkGJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_d2LkFpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_d2LkF5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_d2LkGZowEeyfB_I1yU9UvA" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_d2LkG5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_d2LkGZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_d2LkGpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ThreeWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ThreeWP" id="_d2LkHJowEeyfB_I1yU9UvA" text="NumberOfWPsAtConveyor:=3;">
          <statements xsi:type="ST:Assignment" id="_d2LkHpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_d2LkHJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_d2LkHZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_TwoWP">
        <implementation xsi:type="ST:StructuredText" label="Set_TwoWP" id="_d2LkH5owEeyfB_I1yU9UvA" text="NumberOfWPsAtConveyor:=2;">
          <statements xsi:type="ST:Assignment" id="_d2LkIZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_d2LkH5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_d2LkIJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ZeroWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ZeroWP" id="_d2LkIpowEeyfB_I1yU9UvA" text="NumberOfWPsAtConveyor:=0;">
          <statements xsi:type="ST:Assignment" id="_d2LkJJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_d2LkIpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_d2LkI5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.18" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.5" local_ID="13" stepLevel="2"/>
          <steps name="Ramp_1" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.6" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" condition="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp1Full" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.8" local_ID="35" stepLevel="4"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.9" local_ID="41" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="42" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="43" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="44" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="45" qualifier="S" condition="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.13 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.14" local_ID="52" stepLevel="2"/>
          <steps name="Ramp_2" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.15" local_ID="56" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="58" qualifier="S" condition="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="59" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="60" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp2Full" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.16 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.17" local_ID="74" stepLevel="4"/>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.20 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.21" local_ID="86" stepLevel="2"/>
          <steps name="Ramp_3" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.22" local_ID="90" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="91" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="92" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="93" qualifier="S" condition="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="94" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp3Full" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.23 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.24" local_ID="105" stepLevel="4"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.25" local_ID="115" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="116" qualifier="N" condition="//@resources.0/@pous.28/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" local_ID="12"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="24"/>
          <transitions condition="Priority_White=3" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="27"/>
          <transitions condition="Priority_White=4" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="30"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.4" local_ID="34"/>
          <transitions condition="NOT Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="38"/>
          <transitions condition="Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="40"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="48"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" local_ID="51"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="55"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.3" local_ID="63"/>
          <transitions condition="Priority_Black=3" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="66"/>
          <transitions condition="Priority_Black=4" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="69"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.8" local_ID="73"/>
          <transitions condition="NOT Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="77"/>
          <transitions condition="Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="79"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" local_ID="85"/>
          <transitions condition="Priority_Metallic=3" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="89"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="97"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="100"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.11" local_ID="104"/>
          <transitions condition="NOT Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="108"/>
          <transitions condition="Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="110"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.0" local_ID="119"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.3 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.5" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.2" local_ID="11" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="S" condition="//@resources.0/@pous.28/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.4" local_ID="18" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="S" condition="//@resources.0/@pous.28/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.6" local_ID="25" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="26" qualifier="S" condition="//@resources.0/@pous.28/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.7" local_ID="31" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" condition="//@resources.0/@pous.28/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptRamp1.DI_WPLight AND NOT IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT IndRamp1.DI_WPMetallic AND NOT OptRamp1.DI_WPLight" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.3" local_ID="17"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.4" local_ID="24"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_CountWPsAtConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CountWPsAtConveyor">
          <steps name="Init_ACT_CountWPsAtConveyor" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.0 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.8 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.12" local_ID="0" initialStep="true"/>
          <steps name="Wait500ms_0" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.3" local_ID="4" stepLevel="1"/>
          <steps name="Zero_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.2" local_ID="8" stepLevel="2"/>
          <steps name="Wait500ms_1" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.5 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.7" local_ID="17" stepLevel="1"/>
          <steps name="One_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.6" local_ID="21" stepLevel="2"/>
          <steps name="Wait500ms_2" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.9 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.10" local_ID="30" stepLevel="1"/>
          <steps name="Two_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.11" local_ID="34" stepLevel="2"/>
          <steps name="Wait500ms_3" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.13 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.15" local_ID="43" stepLevel="1"/>
          <steps name="Three_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.14" local_ID="47" stepLevel="2"/>
          <transitions condition="UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.1" local_ID="3"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="NumberOfWPsAtConveyor=0" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND NOT UltrasonicSensor.AI_UltraSonic>=15200" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.4" local_ID="20"/>
          <transitions condition="NumberOfWPsAtConveyor=1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="23"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND NOT (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="25"/>
          <transitions condition="13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND (13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.6" local_ID="33"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND NOT(13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="36"/>
          <transitions condition="NumberOfWPsAtConveyor=2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="40"/>
          <transitions condition="8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.7" local_ID="42"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND (8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.8" local_ID="46"/>
          <transitions condition="NumberOfWPsAtConveyor=3" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="49"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND NOT(8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" condition="//@resources.0/@pous.28/@declaration/@outputVariables.10"/>
            <actions xsi:type="SFC:ComplexAction" localId="5" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.1" pouVariable="//@resources.0/@pous.28/@declaration/@inputVariables.1"/>
          </steps>
          <steps name="Wait_Till_Detection" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.2" local_ID="9" stepLevel="2"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.3" local_ID="12" stepLevel="3"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.4" local_ID="15" stepLevel="4"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="RFID_ReadWrite" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.6" local_ID="21" stepLevel="6"/>
          <steps name="TrunConveyorOnAgain" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.7 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.11 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.17 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.21" local_ID="24" stepLevel="7"/>
          <steps name="TurnConveyorOff_1" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.8" local_ID="28" stepLevel="8">
            <actions xsi:type="SFC:ComplexAction" localId="29" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0" pouVariable="//@resources.0/@pous.28/@declaration/@inputVariables.1"/>
          </steps>
          <steps name="Pusher1_Extending" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.9" local_ID="33" stepLevel="9"/>
          <steps name="Pusher1_Retracting" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.10" local_ID="36" stepLevel="10"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.12" local_ID="41" stepLevel="8"/>
          <steps name="Transporting_To_Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.13" local_ID="44" stepLevel="9"/>
          <steps name="AllowFollowConveyorToReceiveWP" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.14" local_ID="47" stepLevel="10"/>
          <steps name="TurnConveyorOff_4" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.15" local_ID="50" stepLevel="11"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.16" local_ID="53" stepLevel="12"/>
          <steps name="TurnConveyorOff_2" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.18" local_ID="58" stepLevel="8">
            <actions xsi:type="SFC:ComplexAction" localId="59" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0" pouVariable="//@resources.0/@pous.28/@declaration/@inputVariables.1"/>
          </steps>
          <steps name="Pusher2_Extending" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.19" local_ID="63" stepLevel="9"/>
          <steps name="Pusher2_Retract" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.20" local_ID="66" stepLevel="10"/>
          <steps name="TurnConveyorOff_3" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.21" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.22" local_ID="71" stepLevel="8">
            <actions xsi:type="SFC:ComplexAction" localId="72" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0" pouVariable="//@resources.0/@pous.28/@declaration/@inputVariables.1"/>
          </steps>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.10 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.16 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.20 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.23" local_ID="77" stepLevel="13">
            <actions xsi:type="SFC:SimpleAction" localId="78" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@outputVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="79" qualifier="N" condition="//@resources.0/@pous.28/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="PsBeginning.DI_WPDetected" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Wait_Till_Detection.t>T#300ms" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" local_ID="23"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.8" local_ID="27"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.9" local_ID="32"/>
          <transitions condition="Seperator1.Extended" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.10" local_ID="35"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.10" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.20" local_ID="38"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.11" local_ID="40"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.11" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.12" local_ID="43"/>
          <transitions condition="Transporting_To_Conveyor.t>T#1500ms" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.12" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="Check_FollowConveyorAutoamticExecuteCompleted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.13" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.14" local_ID="49"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.14" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.15" local_ID="52"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.15" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.20" local_ID="55"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.16" local_ID="57"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.16" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.17" local_ID="62"/>
          <transitions condition="Seperator2.Extended" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.17" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.18" local_ID="65"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.18" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.20" local_ID="68"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.19" local_ID="70"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.19" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.20" local_ID="75"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.20" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.0" local_ID="82"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="LargeSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" condition="//@resources.0/@pous.28/@declaration/@outputVariables.7"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Pusher1_Retracting_ES" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Pusher2_Retracting_ES" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Switch_Retract" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" condition="//@resources.0/@pous.28/@declaration/@outputVariables.9"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Conveyor_ACT_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="S" condition="//@resources.0/@pous.28/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.4" local_ID="14" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="15" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0" pouVariable="//@resources.0/@pous.28/@declaration/@inputVariables.1"/>
          </steps>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.5" local_ID="19" stepLevel="5"/>
          <steps name="Reset_AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.6" local_ID="22" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="R" condition="//@resources.0/@pous.28/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.7" local_ID="27" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" condition="//@resources.0/@pous.28/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="FollowConveyor_AllowedToInit" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.4" local_ID="13"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="NOT FollowConveyor_AllowedToInit AND Check_FollowConveyorInitCompleted" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.10 //@resources.0/@pous.6 //@resources.0/@pous.21 //@resources.0/@pous.5" callers="//@resources.0/@pous.37" identifier="PicAlpha" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AtPosition1" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition2" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition3" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition4" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripperExtended">
          <location/>
        </inputVariables>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Conveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlpha">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC</statements>
        </comment>
        <internalVariables name="WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition4" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlpha" id="_d2Mx4JowEeyfB_I1yU9UvA" text="Check_AllowedToOperate := MAIN.Check_PicAlpha_AllowedToOperate;&#xA;Check_Conveyor_AutomaticExecuteCompleted := MAIN.Check_PicAlpha_Conveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_d2Mx4powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_d2Mx4JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2Mx4ZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Mx5JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="98" structuredText="_d2Mx4JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2Mx45owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2Mx5powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="39" structuredText="_d2Mx4JowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2Mx5ZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_d2Mx6powEeyfB_I1yU9UvA" statementType="IF" absStartLine="4" absEndLine="6" relStartLine="4" relEndLine="6" endColumnPos="5" structuredText="_d2Mx4JowEeyfB_I1yU9UvA">
          <conditionalBlocks id="_d2Mx6ZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="4" absEndLine="5" relStartLine="4" relEndLine="5" endColumnPos="17" structuredText="_d2Mx4JowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_d2Mx55owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_d2Mx6JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="17" structuredText="_d2Mx4JowEeyfB_I1yU9UvA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_d2MK55owEeyfB_I1yU9UvA" text="InitCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedPosition1 := FALSE;&#xA;ReachedPosition2 := FALSE;&#xA;ReachedPosition3 := FALSE;&#xA;ReachedPosition4 := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2MK6ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_d2MK55owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_d2MK6JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MK65owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_d2MK55owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2MK6powEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MK7ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_d2MK55owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_d2MK7JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MK75owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_d2MK55owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_d2MK7powEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MK8ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="18" structuredText="_d2MK55owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_d2MK8JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MK85owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="25" structuredText="_d2MK55owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition1"/>
            <right xsi:type="STE:Literal" id="_d2MK8powEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MK9ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="25" structuredText="_d2MK55owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition2"/>
            <right xsi:type="STE:Literal" id="_d2MK9JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MK95owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="25" structuredText="_d2MK55owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition3"/>
            <right xsi:type="STE:Literal" id="_d2MK9powEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MK-ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="25" structuredText="_d2MK55owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition4"/>
            <right xsi:type="STE:Literal" id="_d2MK-JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos1">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos1">
          <steps name="Init_ACT_MoveToPos1" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Backwards" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position1_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" condition="//@resources.0/@pous.29/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT ReachedPosition1 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT (AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition1.DI_PositionReached AND Turn_Backwards_Pos1.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition1" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos2">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos2">
          <steps name="Init_ACT_MoveToPos2" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.3 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position2_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" condition="//@resources.0/@pous.29/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT ReachedPosition2 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT (AtPosition1.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition2.DI_PositionReached AND Turn_Backwards_Pos2.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition2" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.7" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos3">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos3">
          <steps name="Init_ACT_MoveToPos3" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.3 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Move_Backwards_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Move_Forwards__Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position3_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" condition="//@resources.0/@pous.29/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT ReachedPosition3 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition3.DI_PositionReached AND Move_Backwards_Pos3.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition3" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.7" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos4">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos4">
          <steps name="Init_ACT_MoveToPos4" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Move_Forwards_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position4_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" condition="//@resources.0/@pous.29/@declaration/@internalVariables.5"/>
          </steps>
          <transitions condition="NOT ReachedPosition4 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition4.DI_PositionReached AND Move_Backwards_Pos4.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition4" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_ACT_PickUpWP" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Turn_VacuumOn" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.5/@implementation/@transitions.5" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WP_PickedUp" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.4" local_ID="13" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" condition="//@resources.0/@pous.29/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.6" local_ID="20" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="N" condition="//@resources.0/@pous.29/@declaration/@inputVariables.7"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.0" local_ID="17"/>
          <transitions condition="Turn_VacuumOn.t>T#2s AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.0" local_ID="24"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_ACT_PutDownWP" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Releasing_WP" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="WP_PutDown" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" condition="//@resources.0/@pous.29/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Move_To_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PickUpWP" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Move_To_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="PutDownWP" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" condition="//@resources.0/@pous.29/@declaration/@outputVariables.2"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedPosition1" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopPicAlpha" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.8/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="PicAlpha_EmergencyHandled" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" condition="//@resources.0/@pous.29/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Move_Up" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" condition="//@resources.0/@pous.29/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Move_ToPos3" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.5" local_ID="17" stepLevel="4"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.9/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.6" local_ID="21" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" condition="//@resources.0/@pous.29/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.17 //@resources.0/@pous.6" callers="//@resources.0/@pous.37" identifier="RefillConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBegining" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="RefillConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="NumberOfWPs" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSending" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="RefillConveyor" id="_d2NY9powEeyfB_I1yU9UvA" text="Check_AllowedToInit := Main.Check_RefillConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_RefillConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_RefillConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_RefillConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_d2NY-JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_d2NY9powEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_d2NY95owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2NY-powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="68" structuredText="_d2NY9powEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_d2NY-ZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2NY_JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="62" structuredText="_d2NY9powEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_d2NY-5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2NY_powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="92" structuredText="_d2NY9powEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2NY_ZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2NZAJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="116" structuredText="_d2NY9powEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2NY_5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2NZApowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="39" structuredText="_d2NY9powEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2NZAZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_d2NZBpowEeyfB_I1yU9UvA" statementType="IF" absStartLine="7" absEndLine="9" relStartLine="7" relEndLine="9" endColumnPos="5" structuredText="_d2NY9powEeyfB_I1yU9UvA">
          <conditionalBlocks id="_d2NZBZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="7" absEndLine="8" relStartLine="7" relEndLine="8" endColumnPos="17" structuredText="_d2NY9powEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_d2NZA5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_d2NZBJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="17" structuredText="_d2NY9powEeyfB_I1yU9UvA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="CountUp_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="CountUp_WPNumber" id="_d2Mx65owEeyfB_I1yU9UvA" text="NumberOfWPs := NumberOfWPs+1;">
          <statements xsi:type="ST:Assignment" id="_d2Mx7ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_d2Mx65owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_d2Mx7JowEeyfB_I1yU9UvA" operator="ADD">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_d2Mx7powEeyfB_I1yU9UvA" text="NumberOfWPs := NumberOfWPs-1;">
          <statements xsi:type="ST:Assignment" id="_d2Mx8JowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_d2Mx7powEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_d2Mx75owEeyfB_I1yU9UvA" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_d2Mx8ZowEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2Mx85owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_d2Mx8ZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_d2Mx8powEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_d2Mx9JowEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2Mx9powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_d2Mx9JowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2Mx9ZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_d2Mx95owEeyfB_I1yU9UvA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;&#xA;Check_FollowConveyor_InitCompleted := FALSE;&#xA;Check_AllowedToReceive := FALSE;&#xA;Check_AllowedToSend := FALSE;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2Mx-ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_d2Mx95owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_d2Mx-JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Mx-5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_d2Mx95owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_d2Mx-powEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Mx_ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_d2Mx95owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2Mx_JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Mx_5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="43" structuredText="_d2Mx95owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_d2Mx_powEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MyAZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="41" structuredText="_d2Mx95owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_d2MyAJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MyA5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_d2Mx95owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_d2MyApowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MyBZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="20" structuredText="_d2Mx95owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_d2MyBJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MyB5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_d2Mx95owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
            <right xsi:type="STE:Literal" id="_d2MyBpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MyCZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="31" structuredText="_d2Mx95owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
            <right xsi:type="STE:Literal" id="_d2MyCJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MyC5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="28" structuredText="_d2Mx95owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
            <right xsi:type="STE:Literal" id="_d2MyCpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2MyDZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="55" structuredText="_d2Mx95owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_d2MyDJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_d2NY8JowEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2NY8powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_d2NY8JowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_d2NY8ZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_d2NY85owEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2NY9ZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_d2NY85owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2NY9JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" condition="//@resources.0/@pous.30/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.8" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0" pouVariable="//@resources.0/@pous.30/@declaration/@inputVariables.3"/>
          </steps>
          <steps name="CountUpWPNumber" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.6" local_ID="23" stepLevel="5"/>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.7" local_ID="26" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" condition="//@resources.0/@pous.30/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.9 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.12" local_ID="33" stepLevel="2"/>
          <steps name="Set_IsSending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.10" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" condition="//@resources.0/@pous.30/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Check_ifStillAllowedToOperate" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.11" local_ID="42" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.13" local_ID="49" stepLevel="5"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.14" local_ID="52" stepLevel="6"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.15" local_ID="55" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="56" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0" pouVariable="//@resources.0/@pous.30/@declaration/@inputVariables.3"/>
          </steps>
          <steps name="SortWP" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.17" local_ID="61"/>
          <steps name="Receiving_again" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.16" local_ID="62" stepLevel="8"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.18 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.20" local_ID="69"/>
          <steps name="SendingCompleted" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.19" local_ID="73">
            <actions xsi:type="SFC:SimpleAction" localId="74" qualifier="R" condition="//@resources.0/@pous.30/@declaration/@outputVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="75" qualifier="N" condition="//@resources.0/@pous.30/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="30"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3 AND Interstep_Sending.t>T#750ms" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.8" local_ID="36"/>
          <transitions condition="IsSending" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.9" local_ID="41"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.10" local_ID="44"/>
          <transitions condition="(NOT Check_AllowedToSend OR NOT NumberOfWPs=3) AND Interstep_Sending.t>T#750ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="46"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.11" local_ID="51"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.12" local_ID="54"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.14" local_ID="59"/>
          <transitions condition="Check_AllowedToReceive" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.14" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" local_ID="64"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.15" local_ID="68"/>
          <transitions condition="NumberOfWPs=0" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.16" local_ID="72"/>
          <transitions condition="NOT IsSending AND AutomaticExecuteSendingCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.16" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="78"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.10" local_ID="80"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="RefillConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" condition="//@resources.0/@pous.30/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" condition="//@resources.0/@pous.30/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.5" local_ID="19" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="20" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0" pouVariable="//@resources.0/@pous.30/@declaration/@inputVariables.3"/>
          </steps>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.6" local_ID="24" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="25" qualifier="S" condition="//@resources.0/@pous.30/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="28"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.17 //@resources.0/@pous.6" callers="//@resources.0/@pous.37" identifier="PicAlphaConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsEnd" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_PicAlpha_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlphaConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="NumberOfWPs" scope="VAR" type="INT" typeName="INT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="PicAlpha_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlphaConveyor" id="_d2OABpowEeyfB_I1yU9UvA" text="Check_AllowedToInit := Main.Check_PicAlphaConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_PicAlphaConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_PicAlphaConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_InitCompleted;&#xA;Check_PicAlpha_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_d2OACJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="64" structuredText="_d2OABpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAB5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OACpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="70" structuredText="_d2OABpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_d2OACZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OADJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="64" structuredText="_d2OABpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAC5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OADpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="94" structuredText="_d2OABpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2OADZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OAEJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="106" structuredText="_d2OABpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAD5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OAEpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="118" structuredText="_d2OABpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAEZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OAFJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="39" structuredText="_d2OABpowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAE5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_d2OAGJowEeyfB_I1yU9UvA" statementType="IF" absStartLine="8" absEndLine="10" relStartLine="8" relEndLine="10" endColumnPos="5" structuredText="_d2OABpowEeyfB_I1yU9UvA">
          <conditionalBlocks id="_d2OAF5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="8" absEndLine="9" relStartLine="8" relEndLine="9" endColumnPos="17" structuredText="_d2OABpowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_d2OAFZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_d2OAFpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="17" structuredText="_d2OABpowEeyfB_I1yU9UvA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_d2NZB5owEeyfB_I1yU9UvA" text="NumberOfWPs := NumberOfWPs-1;">
          <statements xsi:type="ST:Assignment" id="_d2NZCZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_d2NZB5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_d2NZCJowEeyfB_I1yU9UvA" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_d2NZCpowEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2NZDJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_d2NZCpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_d2NZC5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_d2NZDZowEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2NZD5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_d2NZDZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2NZDpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_d2NZEJowEeyfB_I1yU9UvA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;PicAlpha_AllowedToOperate := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2NZEpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_d2NZEJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_d2NZEZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2NZFJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_d2NZEJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_d2NZE5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2NZFpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_d2NZEJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2NZFZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2NZGJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="40" structuredText="_d2NZEJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2NZF5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2NZGpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_d2NZEJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_d2NZGZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2NZHJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_d2NZEJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_d2NZG5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2NZHpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="16" structuredText="_d2NZEJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_d2NZHZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2NZIJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_d2NZEJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_d2NZH5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Rest_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Rest_PicAlpha_AllowedToOperate" id="_d2NZIZowEeyfB_I1yU9UvA" text="PicAlpha_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2NZI5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_d2NZIZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2NZIpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_d2NZJJowEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2NZJpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_d2NZJJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_d2NZJZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_d2NZJ5owEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2NZKZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_d2NZJ5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2NZKJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_NumberOfWPsTo3">
        <implementation xsi:type="ST:StructuredText" label="Set_NumberOfWPsTo3" id="_d2OAAJowEeyfB_I1yU9UvA" text="NumberOfWPs := 3;">
          <statements xsi:type="ST:Assignment" id="_d2OAApowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_d2OAAJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_d2OAAZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_PicAlpha_AllowedToOperate" id="_d2OAA5owEeyfB_I1yU9UvA" text="PicAlpha_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2OABZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_d2OAA5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2OABJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" condition="//@resources.0/@pous.31/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.7" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0" pouVariable="//@resources.0/@pous.31/@declaration/@inputVariables.3"/>
          </steps>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.6" local_ID="23" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="24" qualifier="N" condition="//@resources.0/@pous.31/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.9" local_ID="30" stepLevel="2"/>
          <steps name="ThreeWPsAvailable" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.10" local_ID="38" stepLevel="3"/>
          <steps name="PicAlphaOperating" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.11" local_ID="41" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.12" local_ID="44" stepLevel="5"/>
          <steps name="SortWP_fromPicAlpha" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.13" local_ID="47" stepLevel="6"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.14" local_ID="50" stepLevel="7"/>
          <steps name="ConveyorForwards_Sending_again" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.15" local_ID="53" stepLevel="8"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.16" local_ID="56" stepLevel="9"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.17" local_ID="59" stepLevel="10">
            <actions xsi:type="SFC:ComplexAction" localId="60" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0" pouVariable="//@resources.0/@pous.31/@declaration/@inputVariables.3"/>
          </steps>
          <steps name="SortWP" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.18" local_ID="64" stepLevel="11"/>
          <steps name="ReduceWPNumber_again" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.20" local_ID="67" stepLevel="12"/>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="27"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.6" local_ID="29"/>
          <transitions condition="Check_AllowedToSend AND Interstep_Sending.t>T#100ms" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.7" local_ID="33"/>
          <transitions condition="NOT Check_AllowedToSend AND Interstep_Sending.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="35"/>
          <transitions condition="NumberOfWPs=3" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.8" local_ID="40"/>
          <transitions condition="Check_PicAlpha_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.9" local_ID="43"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.10" local_ID="46"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.11" local_ID="49"/>
          <transitions condition="NumberOfWPs=2" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.12" local_ID="52"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.13" local_ID="55"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.14" local_ID="58"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="NumberOfWPs&lt;=0" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="70"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.12" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" condition="//@resources.0/@pous.31/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" condition="//@resources.0/@pous.31/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.31/@actions.12/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.6" local_ID="22" stepLevel="5">
            <actions xsi:type="SFC:ComplexAction" localId="23" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0" pouVariable="//@resources.0/@pous.31/@declaration/@inputVariables.3"/>
          </steps>
          <steps name="AllowFollowConveyor_ToInitialise" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.7" local_ID="27" stepLevel="6"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.8" local_ID="30" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" condition="//@resources.0/@pous.31/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Wait.t>T#2s" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.7" local_ID="29"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.8" callers="//@resources.0/@pous.37" identifier="SafetyDoor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanelExtended">
          <location/>
        </inputVariables>
        <comment identifier="SafetyDoor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SafetyDoor" id="_d2OAGZowEeyfB_I1yU9UvA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;">
        <statements xsi:type="ST:FunctionCallStatement" id="_d2OAGpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_d2OAGZowEeyfB_I1yU9UvA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OAHJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_d2OAGZowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAG5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OAHpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_d2OAGZowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAHZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OAIJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_d2OAGZowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAH5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OAIpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_d2OAGZowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAIZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callees="//@resources.0/@pous.8" callers="//@resources.0/@pous.37" identifier="LightGrid" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanelExtended">
          <location/>
        </inputVariables>
        <comment identifier="LightGrid">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="LightGrid" id="_d2OAI5owEeyfB_I1yU9UvA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;">
        <statements xsi:type="ST:FunctionCallStatement" id="_d2OAJJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_d2OAI5owEeyfB_I1yU9UvA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OAJpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_d2OAI5owEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAJZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OAKJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_d2OAI5owEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAJ5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OAKpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_d2OAI5owEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAKZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OALJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_d2OAI5owEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2OAK5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.2 //@resources.0/@pous.9 //@resources.0/@pous.17 //@resources.0/@pous.6 //@resources.0/@pous.15" callers="//@resources.0/@pous.37" identifier="SmallSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsBevorSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="SmallSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SmallSortingConveyor" id="_d2OnPJowEeyfB_I1yU9UvA" text="Check_AllowedToInit := Main.Check_SmallSortingConveyor_AllowedToInit;&#xA;Check_AllowedToOperate := Main.Check_SmallSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_d2OnPpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="68" structuredText="_d2OnPJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_d2OnPZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OnQJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="74" structuredText="_d2OnPJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_d2OnP5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OnQpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="98" structuredText="_d2OnPJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2OnQZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OnRJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="122" structuredText="_d2OnPJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_d2OnQ5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2OnRpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="39" structuredText="_d2OnPJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2OnRZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_d2OnSpowEeyfB_I1yU9UvA" statementType="IF" absStartLine="6" absEndLine="8" relStartLine="6" relEndLine="8" endColumnPos="5" structuredText="_d2OnPJowEeyfB_I1yU9UvA">
          <conditionalBlocks id="_d2OnSZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="7" relStartLine="6" relEndLine="7" endColumnPos="17" structuredText="_d2OnPJowEeyfB_I1yU9UvA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_d2OnR5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_d2OnSJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="17" structuredText="_d2OnPJowEeyfB_I1yU9UvA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_d2OnEJowEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2OnEpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_d2OnEJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_d2OnEZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_d2OnE5owEeyfB_I1yU9UvA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp:=FALSE;&#xA;Check_AllowedToOperate :=FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2OnFZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_d2OnFJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnF5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_d2OnFpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnGZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2OnGJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnG5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_d2OnGpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnHZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_d2OnHJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnH5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_d2OnHpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnIZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_d2OnIJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnI5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_d2OnIpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnJZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_d2OnJJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnJ5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_d2OnJpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnKZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_d2OnKJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnK5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="29" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_d2OnKpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnLZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="25" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp"/>
            <right xsi:type="STE:Literal" id="_d2OnLJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2OnL5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="30" structuredText="_d2OnE5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_d2OnLpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_d2OnMJowEeyfB_I1yU9UvA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2OnMpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_d2OnMJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_d2OnMZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_d2OnM5owEeyfB_I1yU9UvA" text="Priority_Black := 2;">
          <statements xsi:type="ST:Assignment" id="_d2OnNZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_d2OnM5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_d2OnNJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_d2OnNpowEeyfB_I1yU9UvA" text="Priority_Metallic := 1;">
          <statements xsi:type="ST:Assignment" id="_d2OnOJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_d2OnNpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_d2OnN5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_d2OnOZowEeyfB_I1yU9UvA" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_d2OnO5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_d2OnOZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_d2OnOpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.5 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.9" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" condition="//@resources.0/@pous.34/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" condition="//@resources.0/@pous.34/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.2 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.4" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" condition="//@resources.0/@pous.34/@declaration/@internalVariables.7"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.6 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.7" local_ID="26" stepLevel="2"/>
          <steps name="Ramp_End" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.8" local_ID="30" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" condition="//@resources.0/@pous.34/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.10 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.11" local_ID="43" stepLevel="2"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.12" local_ID="53" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="54" qualifier="N" condition="//@resources.0/@pous.34/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.7" local_ID="23"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.4" local_ID="25"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="CurrentTarget_Ramp" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.7" local_ID="38"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.6" local_ID="42"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" local_ID="46"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" local_ID="49"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.0" local_ID="57"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.6" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" condition="//@resources.0/@pous.34/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" condition="//@resources.0/@pous.34/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" condition="//@resources.0/@pous.34/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Wait_a_little_bit" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.2 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.4" local_ID="11" stepLevel="2"/>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.3" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" condition="//@resources.0/@pous.34/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.5" local_ID="22" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" condition="//@resources.0/@pous.34/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.7" local_ID="30" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" condition="//@resources.0/@pous.34/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.3 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.5 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.8" local_ID="36" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="37" qualifier="N" condition="//@resources.0/@pous.34/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Wait_a_little_bit.t>T#100ms AND NOT IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" local_ID="19"/>
          <transitions condition="IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Reset_WPType.t>T#1s AND NOT IndSensor.DI_WPMetallic AND NOT OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" local_ID="34"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.0" local_ID="40"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Chose_Right_Destination" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.5 //@resources.0/@pous.34/@actions.8/@implementation/@transitions.11" local_ID="15" stepLevel="5"/>
          <steps name="Switch_Extending" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Allow_FollowConveyorToOperate" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.7" local_ID="22" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" condition="//@resources.0/@pous.34/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Wait2sec" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.8" local_ID="27" stepLevel="8"/>
          <steps name="Stop_Allowence" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.9" local_ID="30" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="R" condition="//@resources.0/@pous.34/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Switch_Retracting" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.10" local_ID="35" stepLevel="10"/>
          <steps name="Transporting_To_Ramp" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.12" local_ID="40" stepLevel="6"/>
          <steps name="TurnConveyorOff" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.10 //@resources.0/@pous.34/@actions.8/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.13" local_ID="44" stepLevel="11"/>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.14" local_ID="47" stepLevel="12">
            <actions xsi:type="SFC:SimpleAction" localId="48" qualifier="N" condition="//@resources.0/@pous.34/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Wait.t>T#900ms OR IndSensor.DI_WPMetallic OR OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Wait2sec.t>T#2s" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.9" local_ID="29"/>
          <transitions condition="NOT FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.10" local_ID="34"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.12" local_ID="37"/>
          <transitions condition="CurrentTarget_Ramp" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.11" local_ID="39"/>
          <transitions condition="Transporting_To_Ramp.t>T#2s" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.12" local_ID="42"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="SmallSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="15" qualifier="N" condition="//@resources.0/@pous.34/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="NOT Check_AllowedToOperate AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.0" local_ID="8"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.0" local_ID="18"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Retract_Switch" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" condition="//@resources.0/@pous.34/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" condition="//@resources.0/@pous.34/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.11/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="Allow_FollowConveyorToInit" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.6" local_ID="22" stepLevel="5"/>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.7" local_ID="25" stepLevel="6"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.8" local_ID="28" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="S" condition="//@resources.0/@pous.34/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.6" local_ID="24"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.0" local_ID="32"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.5 //@resources.0/@pous.7 //@resources.0/@pous.4 //@resources.0/@pous.2 //@resources.0/@pous.9 //@resources.0/@pous.25" callers="//@resources.0/@pous.37" identifier="Stack" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Seperator" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="InductiveSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OpticalSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="WeightModule" scope="VAR_INPUT" type="DERIVED" typeName="WeightModule">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPPickedUp" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stack">
          <statements>//WPType</statements>
          <statements>//WPWeight</statements>
        </comment>
        <comment identifier="Stack">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stack" id="_d2P1MJowEeyfB_I1yU9UvA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_WPPickedUp := Main.Check_Stack_WPPickedUp;">
        <statements xsi:type="ST:FunctionCallStatement" id="_d2P1MZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_d2P1MJowEeyfB_I1yU9UvA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2P1M5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_d2P1MJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_d2P1MpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2P1NZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_d2P1MJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2P1NJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2P1N5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_d2P1MJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2P1NpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2P1OZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_d2P1MJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2P1OJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2P1O5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="47" structuredText="_d2P1MJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_d2P1OpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_d2POIJowEeyfB_I1yU9UvA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_d2POIpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_d2POIJowEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2POIZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_d2POI5owEeyfB_I1yU9UvA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;WPWeight_Light:=FALSE;&#xA;WPWeight_Medium:=FALSE;&#xA;WPWeight_Heavy:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2POJZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_d2POI5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_d2POJJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2POJ5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_d2POI5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_d2POJpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2POKZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="19" structuredText="_d2POI5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_d2POKJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2POK5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_d2POI5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_d2POKpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2POLZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="22" structuredText="_d2POI5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_d2POLJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2POL5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_d2POI5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_d2POLpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2POMZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="22" structuredText="_d2POI5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_d2POMJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2POM5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="21" structuredText="_d2POI5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_d2POMpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer250ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer250ms" id="_d2PONJowEeyfB_I1yU9UvA" text="Timer(IN:=TRUE, PT:=T#250MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_d2PON5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_d2PONJowEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2PONZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2PONpowEeyfB_I1yU9UvA" dataType="TIME" expressionType="LITERAL" symbol="T#250MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPParameters_AND_WPProvided">
        <implementation xsi:type="ST:StructuredText" label="Set_WPParameters_AND_WPProvided" id="_d2POOJowEeyfB_I1yU9UvA" text="//WPType&#xA;IF(NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=TRUE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=TRUE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(InductiveSensor.DI_WPMetallic)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=TRUE;&#xA;END_IF&#xA;//WPWeight&#xA;IF(WeightModule.AI_WPWeight&lt;12000)THEN&#xA;&#x9;WPWeight_Light:=TRUE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=TRUE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(2400&lt;=WeightModule.AI_WPWeight)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=TRUE;&#x9;&#xA;END_IF&#xA;&#xA;WPProvided:=TRUE;">
          <statements xsi:type="ST:If" id="_d2POVJowEeyfB_I1yU9UvA" statementType="IF" absStartLine="2" absEndLine="14" relStartLine="2" relEndLine="14" endColumnPos="5" structuredText="_d2POOJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2POQZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="2" absEndLine="5" relStartLine="2" relEndLine="5" endColumnPos="23" structuredText="_d2POOJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2POOpowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2POOZowEeyfB_I1yU9UvA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                    </subexpression>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2POPJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="19" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_d2POO5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2POPpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="20" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_d2POPZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2POQJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="23" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_d2POP5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2POSpowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="9" relStartLine="6" relEndLine="9" endColumnPos="23" structuredText="_d2POOJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2POQ5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2POQpowEeyfB_I1yU9UvA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2PORZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="20" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_d2PORJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2POR5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="19" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_d2PORpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2POSZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="23" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_d2POSJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2POU5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="13" relStartLine="10" relEndLine="13" endColumnPos="22" structuredText="_d2POOJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2POTJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_d2POS5owEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2POTpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="20" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_d2POTZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2POUJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="20" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_d2POT5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2POUpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="22" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_d2POUZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_d2POcJowEeyfB_I1yU9UvA" statementType="IF" absStartLine="16" absEndLine="28" relStartLine="16" relEndLine="28" endColumnPos="5" structuredText="_d2POOJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2POXZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="16" absEndLine="19" relStartLine="16" relEndLine="19" endColumnPos="22" structuredText="_d2POOJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2POVpowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2POVZowEeyfB_I1yU9UvA" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2POWJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="21" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_d2POV5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2POWpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="23" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_d2POWZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2POXJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="22" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_d2POW5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2POZpowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="23" relStartLine="20" relEndLine="23" endColumnPos="22" structuredText="_d2POOJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2POX5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2POXpowEeyfB_I1yU9UvA" operator="AND">
                  <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                    <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </right>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="24000"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2POYZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="22" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_d2POYJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2POY5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="22" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_d2POYpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2POZZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="22" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_d2POZJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2POb5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="24" absEndLine="27" relStartLine="24" relEndLine="27" endColumnPos="21" structuredText="_d2POOJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2POaJowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2POZ5owEeyfB_I1yU9UvA" operator="LESSER_EQUAL">
                  <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2400"/>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2POapowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="22" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_d2POaZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2PObJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="23" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_d2POa5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2PObpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="21" structuredText="_d2POOJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_d2PObZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2POcpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" endColumnPos="16" structuredText="_d2POOJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            <right xsi:type="STE:Literal" id="_d2POcZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ProvideWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ProvideWP">
          <steps name="ACT_ProvideWP_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="WP_Ready" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.5 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.7" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" condition="//@resources.0/@pous.35/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="8" qualifier="R" condition="//@resources.0/@pous.35/@declaration/@internalVariables.1"/>
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="R" condition="//@resources.0/@pous.35/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="R" condition="//@resources.0/@pous.35/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="11" qualifier="R" condition="//@resources.0/@pous.35/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="R" condition="//@resources.0/@pous.35/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.3" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" condition="//@resources.0/@pous.35/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="Light" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.4" local_ID="22" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" condition="//@resources.0/@pous.35/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.6" local_ID="29" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="30" qualifier="S" condition="//@resources.0/@pous.35/@declaration/@internalVariables.1"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.8" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" condition="//@resources.0/@pous.35/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="Weight_Choice" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.9 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.10 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.12" local_ID="42" stepLevel="4"/>
          <steps name="Medium" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.11" local_ID="49" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="50" qualifier="S" condition="//@resources.0/@pous.35/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="Heavy" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.13" local_ID="56" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="S" condition="//@resources.0/@pous.35/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Provided" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.11 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.14" local_ID="63" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="64" qualifier="S" condition="//@resources.0/@pous.35/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Seperator.Extended AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" local_ID="26"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.5" local_ID="28"/>
          <transitions condition="WPType_White" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" local_ID="33"/>
          <transitions condition="InductiveSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.6" local_ID="36"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" local_ID="41"/>
          <transitions condition="WeightModule.AI_WPWeight&lt;12000" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" local_ID="45"/>
          <transitions condition="12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.8" local_ID="48"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.8" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" local_ID="53"/>
          <transitions condition="2400&lt;=WeightModule.AI_WPWeight" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.9" local_ID="55"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.9" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" local_ID="60"/>
          <transitions condition="WPProvided" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.0" local_ID="67"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.1 //@resources.0/@pous.35/@actions.5/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Provide_WP" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Dont_Provide_WP" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.4" local_ID="12" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" condition="//@resources.0/@pous.35/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Waiting_For_Crane_To_Pick_Up" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.35/@actions.5/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.5" local_ID="18" stepLevel="3"/>
          <steps name="Stack_Retracing" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.6" local_ID="21" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="R" condition="//@resources.0/@pous.35/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Timer.Q AND NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Timer.Q AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND Check_WPPickedUp" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Seperator.Retracted" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Magazine_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stack_Retracting" incomingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Stack_EmergencyHandled" incomingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" condition="//@resources.0/@pous.35/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stack_ACT_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.35/@actions.7/@implementation/@transitions.1" local_ID="0" initialStep="true"/>
          <steps name="Set_WP_Parameters" incomingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="1"/>
          <steps name="Retract_Cylinder_Init" incomingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.35/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.3" local_ID="10" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" condition="//@resources.0/@pous.35/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.2" local_ID="3"/>
          <transitions condition="NOT InitCompleted AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.1" local_ID="5"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.0" local_ID="17"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.7 //@resources.0/@pous.13 //@resources.0/@pous.14 //@resources.0/@pous.4 //@resources.0/@pous.5 //@resources.0/@pous.1" callers="//@resources.0/@pous.37" identifier="Stamp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="PressureSensor" scope="VAR_INPUT" type="DERIVED" typeName="PressureSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PropValve" scope="VAR_INPUT" type="DERIVED" typeName="ProportionalValve">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="StampingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SlidingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="BistableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Allowed_To_Operate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Light" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Medium" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Heavy" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stamp">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPStamped" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsStamping" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stamp" id="_d2QcQJowEeyfB_I1yU9UvA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_Allowed_To_Operate := Main.Check_Stamp_AllowedToOperate;&#xA;Check_WPWeight_Light:=Main.Crane_WPWeight_Light;&#xA;Check_WPWeight_Medium:=Main.Crane_WPWeight_Medium;&#xA;Check_WPWeight_Heavy:=Main.Crane_WPWeight_Heavy;">
        <statements xsi:type="ST:FunctionCallStatement" id="_d2QcQZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_d2QcQJowEeyfB_I1yU9UvA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2QcQ5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_d2QcQJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_d2QcQpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2QcRZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_d2QcQJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2QcRJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2QcR5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_d2QcQJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_d2QcRpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2QcSZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_d2QcQJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_d2QcSJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2QcS5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="61" structuredText="_d2QcQJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Allowed_To_Operate"/>
          <right xsi:type="STE:VariableExpression" id="_d2QcSpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2QcTZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="47" structuredText="_d2QcQJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_d2QcTJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2QcT5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="49" structuredText="_d2QcQJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_d2QcTpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_d2QcUZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="47" structuredText="_d2QcQJowEeyfB_I1yU9UvA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_d2QcUJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          </right>
        </statements>
      </implementations>
      <actions name="ExtendStampingCylinder_AND_Timer1500ms">
        <implementation xsi:type="ST:StructuredText" label="ExtendStampingCylinder_AND_Timer1500ms" id="_d2P1PJowEeyfB_I1yU9UvA" text="StampingCylinder.ACT_Extend();&#xA;Timer(IN:=TRUE, PT:=T#1500MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_d2P1PZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_d2P1PJowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2P1QJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_d2P1PJowEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2P1PpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2P1P5owEeyfB_I1yU9UvA" dataType="TIME" expressionType="LITERAL" symbol="T#1500MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Pressure">
        <implementation xsi:type="ST:StructuredText" label="Reset_Pressure" id="_d2P1QZowEeyfB_I1yU9UvA" text="PropValve.AO_SetPressure:=0;">
          <statements xsi:type="ST:Assignment" id="_d2P1Q5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_d2P1QZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2P1QpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_d2P1RJowEeyfB_I1yU9UvA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_d2P1RpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_d2P1RJowEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2P1RZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_d2P1R5owEeyfB_I1yU9UvA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;propValve.AO_SetPressure:=0;&#xA;IsStamping:=FALSE;&#xA;WPStamped:=FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_White := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2P1SZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_d2P1R5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_d2P1SJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1S5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_d2P1R5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_d2P1SpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1TZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="27" structuredText="_d2P1R5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="propValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2P1TJowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1T5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="17" structuredText="_d2P1R5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            <right xsi:type="STE:Literal" id="_d2P1TpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1UZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_d2P1R5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPStamped"/>
            <right xsi:type="STE:Literal" id="_d2P1UJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1U5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_d2P1R5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_d2P1UpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1VZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_d2P1R5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_d2P1VJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1V5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_d2P1R5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_d2P1VpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1WZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="23" structuredText="_d2P1R5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_d2P1WJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1W5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="24" structuredText="_d2P1R5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_d2P1WpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1XZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="23" structuredText="_d2P1R5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_d2P1XJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_HeavyPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_HeavyPressure" id="_d2P1XpowEeyfB_I1yU9UvA" text="PropValve.AO_SetPressure:=7000;">
          <statements xsi:type="ST:Assignment" id="_d2P1YJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_d2P1XpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2P1X5owEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="7000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_LightPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_LightPressure" id="_d2P1YZowEeyfB_I1yU9UvA" text="PropValve.AO_SetPressure:=4000;">
          <statements xsi:type="ST:Assignment" id="_d2P1Y5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_d2P1YZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2P1YpowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="4000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_MediumPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_MediumPressure" id="_d2P1ZJowEeyfB_I1yU9UvA" text="PropValve.AO_SetPressure:=5500;">
          <statements xsi:type="ST:Assignment" id="_d2P1ZpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_d2P1ZJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2P1ZZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="5500"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer1000ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer1000ms" id="_d2P1Z5owEeyfB_I1yU9UvA" text="Timer(IN:=TRUE, PT:=T#1000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_d2P1apowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_d2P1Z5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2P1aJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2P1aZowEeyfB_I1yU9UvA" dataType="TIME" expressionType="LITERAL" symbol="T#1000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer500ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer500ms" id="_d2P1a5owEeyfB_I1yU9UvA" text="Timer(IN:=TRUE, PT:=T#500ms);">
          <statements xsi:type="ST:FunctionCallStatement" id="_d2P1bpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_d2P1a5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2P1bJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2P1bZowEeyfB_I1yU9UvA" dataType="TIME" expressionType="LITERAL" symbol="T#500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPWeight">
        <implementation xsi:type="ST:StructuredText" label="Set_WPWeight" id="_d2P1b5owEeyfB_I1yU9UvA" text="WPWeight_Light := Check_WPWeight_Light;&#xA;WPWeight_Medium := Check_WPWeight_Medium;&#xA;WPWeight_Heavy := Check_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_d2P1cZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_d2P1b5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_d2P1cJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1c5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="40" structuredText="_d2P1b5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_d2P1cpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2P1dZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="38" structuredText="_d2P1b5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_d2P1dJowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Stamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Stamp">
          <steps name="Stamp_ACT_Stamp" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Get_WPWeight_From_Crane" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Slider_Retract" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.6" local_ID="6" stepLevel="2"/>
          <steps name="SetLightPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="SetMediumPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="SetHeavyPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.7" local_ID="20" stepLevel="3"/>
          <steps name="Extend_StampingCylinder" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.5 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.15" local_ID="24" stepLevel="4"/>
          <steps name="CheckCorrectPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.9 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.13" local_ID="28" stepLevel="5"/>
          <steps name="HeavyPressureOk" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.10" local_ID="32" stepLevel="6"/>
          <steps name="MediumPressureOk" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.12" local_ID="37" stepLevel="6"/>
          <steps name="LightPressureOk" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.14" local_ID="42" stepLevel="6"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.16" local_ID="48" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="49" qualifier="N" condition="//@resources.0/@pous.36/@declaration/@inputVariables.6"/>
          </steps>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.17" local_ID="55" stepLevel="7"/>
          <steps name="ResetPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.18" local_ID="58" stepLevel="8"/>
          <steps name="Move_Stamp_Up" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.19" local_ID="61" stepLevel="9"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.20" local_ID="64" stepLevel="10"/>
          <steps name="WP_Stamped" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.21" local_ID="67" stepLevel="11">
            <actions xsi:type="SFC:SimpleAction" localId="68" qualifier="S" condition="//@resources.0/@pous.36/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="69" qualifier="R" condition="//@resources.0/@pous.36/@declaration/@outputVariables.7"/>
          </steps>
          <transitions condition="IsStamping AND NOT WPStamped AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light=Check_WPWeight_Light AND WPWeight_Medium=Check_WPWeight_Medium AND WPWeight_Heavy=Check_WPWeight_Heavy" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Light" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="PropValve.AO_SetPressure=4000" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" local_ID="12"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Medium" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="PropValve.AO_SetPressure=5500" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="PropValve.AO_SetPressure=7000" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="StampingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 18000) AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.8" local_ID="31"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" local_ID="34"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 5300) AND (PressureSensor.AI_CurrentPressure &lt; 17000) AND WPWeight_Medium" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.9" local_ID="36"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" local_ID="39"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 4800) AND (PressureSensor.AI_CurrentPressure &lt; 5200) AND WPWeight_Light" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.10" local_ID="41"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" local_ID="44"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.11" local_ID="47"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.0" local_ID="52"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.13" local_ID="57"/>
          <transitions condition="PropValve.AO_SetPressure=0" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.14" local_ID="60"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="WPStamped" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.0" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Stamp_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Dummy1" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Dummy2" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Intersetp" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PrepareStamping" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="R" condition="//@resources.0/@pous.36/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="S" condition="//@resources.0/@pous.36/@declaration/@outputVariables.7"/>
          </steps>
          <steps name="Stamp_WP" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.6" local_ID="21" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" condition="//@resources.0/@pous.36/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Allowed_To_Operate AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Check_Allowed_To_Operate AND Timer.Q" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="IsStamping AND NOT WPStamped" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="WPStamped" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Stamp_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stamp_Retracting" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SlidingCylinder_Retracting" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Stamp_EmergencyHandled" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" condition="//@resources.0/@pous.36/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stamp_ACT_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Stamping_Cylinder_Init" incomingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Extend_Sliding_Cylinder_Init" incomingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" condition="//@resources.0/@pous.36/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.35 //@resources.0/@pous.26 //@resources.0/@pous.28 //@resources.0/@pous.36 //@resources.0/@pous.31 //@resources.0/@pous.34 //@resources.0/@pous.30 //@resources.0/@pous.29 //@resources.0/@pous.32 //@resources.0/@pous.33 //@resources.0/@pous.27 //@resources.0/@pous.24" callers="//@resources.0/@pous.0" identifier="xPPU" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stack" scope="VAR_INPUT" type="DERIVED" typeName="Stack">
          <location/>
        </inputVariables>
        <inputVariables name="Crane" scope="VAR_INPUT" type="DERIVED" typeName="Crane">
          <location/>
        </inputVariables>
        <inputVariables name="LargeSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="LargeSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="Stamp" scope="VAR_INPUT" type="DERIVED" typeName="Stamp">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlphaConveyor" scope="VAR_INPUT" type="DERIVED" typeName="PicAlphaConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="SmallSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="SmallSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="RefillConveyor" scope="VAR_INPUT" type="DERIVED" typeName="RefillConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlpha" scope="VAR_INPUT" type="DERIVED" typeName="PicAlpha">
          <location/>
        </inputVariables>
        <inputVariables name="SafetyDoor" scope="VAR_INPUT" type="DERIVED" typeName="SafetyDoor">
          <location/>
        </inputVariables>
        <inputVariables name="LightGrid" scope="VAR_INPUT" type="DERIVED" typeName="LightGrid">
          <location/>
        </inputVariables>
        <inputVariables name="EngergyMonitoringHardware" scope="VAR_INPUT" type="DERIVED" typeName="EnergyMonitor">
          <location/>
        </inputVariables>
        <inputVariables name="Block_LSCSep1_LSCSep2" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_SSC_PAC" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_Stack_Crane" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_Stamp_RC" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="DI_NO_EMERGENCY" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="xPPU">
          <statements>//GREEN</statements>
          <statements>//WHITE</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//GREEN</statements>
          <statements>//WHITE</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="SFC:SequentialFunctionChart" label="xPPU">
        <steps name="Init" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.0" local_ID="0" initialStep="true"/>
        <steps name="SFC_Reset_Reset" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.1" local_ID="3" stepLevel="1"/>
        <steps name="Start" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.1" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.2 //@resources.0/@pous.37/@implementations.0/@transitions.3" local_ID="6" stepLevel="2"/>
        <steps name="ManuelMode_active" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.3" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.4" local_ID="12" stepLevel="3"/>
        <steps name="Initialisation_2" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.2" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.5 //@resources.0/@pous.37/@implementations.0/@transitions.6 //@resources.0/@pous.37/@implementations.0/@transitions.7" local_ID="17" stepLevel="3"/>
        <steps name="AutomaticExecute" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.5" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.8 //@resources.0/@pous.37/@implementations.0/@transitions.9 //@resources.0/@pous.37/@implementations.0/@transitions.10" local_ID="28" stepLevel="4"/>
        <steps name="ManuelMode_Active2" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.10" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.11" local_ID="37" stepLevel="5"/>
        <steps name="Emergency_Stop" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.8" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.12" local_ID="42" stepLevel="5"/>
        <steps name="SFC_Reset" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.12" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.13" local_ID="45" stepLevel="6"/>
        <steps name="Ready_To_Initialise" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.13" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.14" local_ID="48" stepLevel="7"/>
        <transitions condition="TRUE" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.0" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.1" local_ID="2"/>
        <transitions condition="SFCResetResetCompleted" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.1" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.2" local_ID="5"/>
        <transitions condition="StartButton AND AutomaticMode" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.4" local_ID="9"/>
        <transitions condition="ManuelMode" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.3" local_ID="11"/>
        <transitions condition="AutomaticMode" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.3" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.2" local_ID="14"/>
        <transitions condition="InitCompleted" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.5" local_ID="20"/>
        <transitions condition="EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.7" local_ID="22"/>
        <transitions condition="ManuelMode" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.3" local_ID="25"/>
        <transitions condition="EmergencyStop" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.7" local_ID="31"/>
        <transitions condition="StartButton" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.0" local_ID="33"/>
        <transitions condition="ManuelMode" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.6" local_ID="36"/>
        <transitions condition="AutomaticMode" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.6" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.5" local_ID="39"/>
        <transitions condition="EmergencyHandled" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.7" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.8" local_ID="44"/>
        <transitions condition="SFCResetCompleted" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.8" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.9" local_ID="47"/>
        <transitions condition="NOT EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.9" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.0" local_ID="50"/>
      </implementations>
      <actions name="ACT_CheckEmergency">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckEmergency" id="_d2QcUpowEeyfB_I1yU9UvA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;">
          <statements xsi:type="ST:Assignment" id="_d2QcVJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_d2QcUpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_d2QcU5owEeyfB_I1yU9UvA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_CheckManuelMode">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckManuelMode" id="_d2QcVZowEeyfB_I1yU9UvA" text="ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:Assignment" id="_d2QcV5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="134" structuredText="_d2QcVZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_d2QcVpowEeyfB_I1yU9UvA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2QcWZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="156" structuredText="_d2QcVZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_d2QcWJowEeyfB_I1yU9UvA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Start">
        <implementation xsi:type="ST:StructuredText" label="ACT_Start" id="_d2QcWpowEeyfB_I1yU9UvA" text="StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:Assignment" id="_d2QcXJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="140" structuredText="_d2QcWpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_d2QcW5owEeyfB_I1yU9UvA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2QcXpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="134" structuredText="_d2QcWpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_d2QcXZowEeyfB_I1yU9UvA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2QcYJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="156" structuredText="_d2QcWpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_d2QcX5owEeyfB_I1yU9UvA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="AutomaticExecute_entry">
        <implementation xsi:type="ST:StructuredText" label="AutomaticExecute_entry" id="_d2QcYZowEeyfB_I1yU9UvA" text="AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;Stack.Panel.ACT_TurnLampGreen_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_On();">
          <statements xsi:type="ST:Assignment" id="_d2QcY5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="32" structuredText="_d2QcYZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_d2QcYpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2QcZJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_d2QcYZowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2QcZZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_d2QcYZowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2QcZpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_d2QcYZowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2QcZ5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="49" structuredText="_d2QcYZowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2QcaJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="34" structuredText="_d2QcYZowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2QcaZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="34" structuredText="_d2QcYZowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
        </implementation>
      </actions>
      <actions name="CallAll_AutomationExecutes">
        <implementation xsi:type="ST:StructuredText" label="CallAll_AutomationExecutes" id="_d2RDUJowEeyfB_I1yU9UvA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;&#xA;Crane.ACT_AutomaticExecute();&#xA;Stack.ACT_AutomaticExecute();&#xA;Stamp.ACT_AutomaticExecute();&#xA;LargeSortingConveyor.ACT_AutomaticExecute();&#xA;PicAlphaConveyor.ACT_AutomaticExecute();&#xA;SmallSortingConveyor.ACT_AutomaticExecute();&#xA;RefillConveyor.ACT_AutomaticExecute();&#xA;PicAlpha.ACT_AutomaticExecute();&#xA;ACT_FaultAirPressureDetection();">
          <statements xsi:type="ST:Assignment" id="_d2RDUpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_d2RDUZowEeyfB_I1yU9UvA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2RDVJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="140" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_d2RDU5owEeyfB_I1yU9UvA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2RDVpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="134" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_d2RDVZowEeyfB_I1yU9UvA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2RDWJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="156" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_d2RDV5owEeyfB_I1yU9UvA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDWZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="28" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDWpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="28" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDW5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="28" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDXJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDXZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="39" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDXpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="43" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDX5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="37" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDYJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="31" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDYZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="31" structuredText="_d2RDUJowEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_FaultAirPressureDetection"/>
          </statements>
        </implementation>
      </actions>
      <actions name="EmergencyStop_entry">
        <implementation xsi:type="ST:StructuredText" label="EmergencyStop_entry" id="_d2RDYpowEeyfB_I1yU9UvA" text="EmergencyHandled:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_d2RDZJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="23" structuredText="_d2RDYpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyHandled"/>
            <right xsi:type="STE:Literal" id="_d2RDY5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDZZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_d2RDYpowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDZpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_d2RDYpowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDZ5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_d2RDYpowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDaJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_d2RDYpowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDaZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_d2RDYpowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDapowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_d2RDYpowEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Init_entry">
        <implementation xsi:type="ST:StructuredText" label="Init_entry" id="_d2RDa5owEeyfB_I1yU9UvA" text="InitCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#xA;Stack.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_d2RDbZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_d2RDa5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_d2RDbJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDbpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="49" structuredText="_d2RDa5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDb5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_d2RDa5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDcJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="34" structuredText="_d2RDa5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDcZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_d2RDa5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDcpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_d2RDa5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDc5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_d2RDa5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="LightBlinking">
        <implementation xsi:type="ST:StructuredText" label="LightBlinking" id="_d2RDdJowEeyfB_I1yU9UvA" text="Timer(IN := NOT Timer.Q, PT:=T#1500ms);&#xA;&#xA;IF (Timer.ET &lt; Timer.PT/2) THEN&#xA;&#x9;//GREEN&#xA;&#x9;Stack.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;Stamp.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;Stack.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;&#x9;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampReset_Off();&#xA;ELSE&#xA;&#x9;//WHITE&#xA;&#x9;Stack.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;Stamp.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;Stack.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;&#x9;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_On();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampReset_On();&#xA;END_IF&#xA;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RDd5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:UnaryExpression" id="_d2RDdZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Q"/>
                  </subexpression>
                </assignedValue>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RDdpowEeyfB_I1yU9UvA" dataType="TIME" expressionType="LITERAL" symbol="T#1500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:If" id="_d2RDkJowEeyfB_I1yU9UvA" statementType="IF" absStartLine="3" absEndLine="27" relStartLine="3" relEndLine="27" endColumnPos="5" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2RDhJowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="14" relStartLine="3" relEndLine="14" endColumnPos="40" structuredText="_d2RDdJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2RDeZowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2RDeJowEeyfB_I1yU9UvA" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ET"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="DIV">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDepowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="35" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDe5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="50" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDfJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="35" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDfZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="40" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDfpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="39" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDf5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="36" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDgJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="51" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDgZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="36" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDgpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="41" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDg5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="40" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_d2RDj5owEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="15" absEndLine="26" relStartLine="15" relEndLine="26" endColumnPos="39" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDhZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="36" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDhpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="51" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDh5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="36" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDiJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="41" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDiZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="40" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDipowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="35" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDi5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="50" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDjJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="35" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDjZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="40" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2RDjpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="39" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2RDkpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" endColumnPos="156" structuredText="_d2RDdJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_d2RDkZowEeyfB_I1yU9UvA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Ready_To_Initialise_active">
        <implementation xsi:type="ST:StructuredText" label="Ready_To_Initialise_active" id="_d2RqYJowEeyfB_I1yU9UvA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;IF(StartButton)THEN&#xA;&#x9;Stamp.SoftwareEmergency:=FALSE;&#xA;&#x9;Crane.SoftwareEmergency:=FALSE;&#xA;&#x9;PicAlpha.SoftwareEmergency:=FALSE;&#xA;END_IF">
          <statements xsi:type="ST:Assignment" id="_d2RqYpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_d2RqYJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_d2RqYZowEeyfB_I1yU9UvA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2RqZJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="140" structuredText="_d2RqYJowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_d2RqY5owEeyfB_I1yU9UvA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:If" id="_d2RqbpowEeyfB_I1yU9UvA" statementType="IF" absStartLine="3" absEndLine="7" relStartLine="3" relEndLine="7" endColumnPos="5" structuredText="_d2RqYJowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2RqbZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="6" relStartLine="3" relEndLine="6" endColumnPos="34" structuredText="_d2RqYJowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2RqZpowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_d2RqZZowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2RqaJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="31" structuredText="_d2RqYJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_d2RqZ5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2RqapowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="31" structuredText="_d2RqYJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_d2RqaZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_d2RqbJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="34" structuredText="_d2RqYJowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_d2Rqa5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_active" id="_d2Rqb5owEeyfB_I1yU9UvA" text="(*PPU*)&#xA;&#x9;//Variables&#xA;&#x9;InitCompleted:=FALSE;&#xA;&#x9;AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;(*Crane Reset*)&#xA;&#x9;Crane(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#xA;(*LargeSortingConveyor Reset*)&#xA;&#x9;LargeSortingConveyor(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*Stack Reset*)&#xA;&#x9;Stack(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=TRUE);&#xA;&#xA;(*Stamp Reset*)&#xA;&#x9;Stamp(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=TRUE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2RqcZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="21" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_d2RqcJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2Rqc5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="33" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_d2RqcpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RqdZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="22" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqdJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2Rqd5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="31" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqdpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RqeZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="43" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqeJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2Rqe5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="40" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqepowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RqfZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="41" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqfJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2Rqf5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="38" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqfpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RqgZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="38" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqgJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2Rqg5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="35" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqgpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RqhZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="36" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqhJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2Rqh5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="37" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqhpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RqiZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="46" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqiJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2Rqi5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="58" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqipowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RqjZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="54" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqjJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2Rqj5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="53" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqjpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RqkZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="48" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqkJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2Rqk5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="22" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqkpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RqlZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="31" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqlJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2Rql5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="43" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqlpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RqmZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="36" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqmJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2Rqm5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="22" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqmpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2RqnZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="31" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqnJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2Rqn5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="43" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2RqnpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRcZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="32" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRcJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRc5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="33" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRcpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRdZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="42" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRdJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRd5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="54" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRdpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SReZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="48" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SReJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRe5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="37" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRepowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRfZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="46" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRfJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRf5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="58" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRfpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRgZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" startColumnPos="1" endColumnPos="48" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRgJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRg5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="54" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRgpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRhZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="53" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRhJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRh5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="31" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRhpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRiZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="40" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRiJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRi5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="52" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRipowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRjZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="46" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRjJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRj5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="25" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRjpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRkZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="34" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRkJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRk5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="46" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRkpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRlZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="40" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRlJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRl5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="40" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRlpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRmZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="40" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRmJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRm5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="40" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRmpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRnZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="65" absEndLine="65" relStartLine="65" relEndLine="65" startColumnPos="1" endColumnPos="38" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRnJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRn5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="39" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRnpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2SRoZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="68" absEndLine="68" relStartLine="68" relEndLine="68" endColumnPos="23" structuredText="_d2Rqb5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_d2SRoJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_entry" id="_d2SRopowEeyfB_I1yU9UvA" text="SFCResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2SRpJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_d2SRopowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_d2SRo5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2SRppowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_d2SRopowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2SRpZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_active" id="_d2SRp5owEeyfB_I1yU9UvA" text="(*Crane Reset*)&#x9;&#xA;&#x9;Crane(SFCReset:=FALSE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;Crane.LiftingCylinder.ACT_Retract();&#xA;&#x9;Crane.Gripper.ACT_Release();&#xA;&#x9;Crane.Table.Motor.ACT_Stop();&#x9;&#xA;&#x9;//Variables&#xA;&#x9;Crane.SFCReset:=FALSE;&#xA;&#x9;&#xA;                                                               &#xA;(*LargeSortingConveyor Reset*)  &#xA;&#x9;LargeSortingConveyor(SFCReset:=FALSE);                                &#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.Motor.ACT_Stop();&#xA;&#x9;LargeSortingConveyor.Seperator1.ACT_Retract();&#xA;&#x9;LargeSortingConveyor.Seperator2.ACT_Retract();&#xA;&#x9;//Variables&#xA;&#x9;LargeSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;                                                            &#xA;(*Stack Reset*)   &#xA;&#x9;Stack(SFCReset:=FALSE);                                              &#xA;&#x9;Stack.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;Stack.Seperator.ACT_Retract();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stack.SFCReset:=FALSE;&#xA;                                                        &#xA;(*Stamp Reset*)  &#xA;&#x9;Stamp(SFCReset:=FALSE);                                               &#xA;&#x9;Stamp.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=FALSE);&#xA;&#x9;Stamp.StampingCylinder.ACT_Retract();&#xA;&#x9;Stamp.SlidingCylinder.ACT_Extend();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stamp.SFCReset:=FALSE;&#xA;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=FALSE); &#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlphaConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=FALSE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;SmallSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=FALSE); &#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;RefillConveyor.SFCReset:=FALSE;&#x9;&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlpha.SFCReset:=FALSE;&#x9;&#xA;&#x9;                                                            &#xA;SFCResetResetCompleted:=TRUE;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRqZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="23" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRqJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRq5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="32" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRqpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRrZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="44" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRrJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRr5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="41" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRrpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRsZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="42" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRsJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRs5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="39" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRspowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRtZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="39" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRtJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRt5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="36" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRtpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRuZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="37" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRuJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRupowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="36" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LiftingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRu5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="28" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Release"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRvJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="29" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </innerVariable>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2SRvpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="22" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2SRvZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRwJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="38" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRv5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRwpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="47" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRwZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRxJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="59" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRw5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRxpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="55" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRxZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRyJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="54" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRx5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRypowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="49" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SRyZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRy5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="38" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRzJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="46" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator1"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SRzZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="46" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator2"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2SRz5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="37" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2SRzpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SR0ZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="23" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SR0JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SR05owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="32" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SR0powEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SR1ZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="44" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SR1JowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SR15owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="37" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SR1powEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SR2JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="30" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2SR2powEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="22" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2SR2ZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SR3JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="23" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SR25owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SR3powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="32" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SR3ZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SR4JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="44" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SR35owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SR4powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="33" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2SR4ZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2SR45owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="37" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4gJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="35" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SlidingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2S4gpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="22" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2S4gZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4hJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="1" endColumnPos="34" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4g5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4hpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="43" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4hZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4iJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="55" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4h5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4ipowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="49" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4iZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2S4jJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="33" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2S4i5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4jpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="38" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4jZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4kJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="47" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4j5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4kpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="59" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4kZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4lJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="49" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4k5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4lpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="55" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4lZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4mJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="54" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4l5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2S4mpowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="37" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2S4mZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4nJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="69" absEndLine="69" relStartLine="69" relEndLine="69" startColumnPos="1" endColumnPos="32" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4m5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4npowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="41" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4nZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4oJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="53" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4n5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4opowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="47" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4oZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2S4pJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="74" absEndLine="74" relStartLine="74" relEndLine="74" startColumnPos="1" endColumnPos="31" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2S4o5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4ppowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="26" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4pZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4qJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="35" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4p5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4qpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="47" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4qZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4rJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="41" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4q5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4rpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="81" absEndLine="81" relStartLine="81" relEndLine="81" startColumnPos="1" endColumnPos="41" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4rZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4sJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="82" absEndLine="82" relStartLine="82" relEndLine="82" startColumnPos="1" endColumnPos="41" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4r5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4spowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="83" absEndLine="83" relStartLine="83" relEndLine="83" startColumnPos="1" endColumnPos="41" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4sZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4tJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="39" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4s5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_d2S4tpowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="40" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_d2S4tZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2S4uJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="25" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2S4t5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2S4upowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="89" absEndLine="89" relStartLine="89" relEndLine="89" endColumnPos="28" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_d2S4uZowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2S4vJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="90" absEndLine="90" relStartLine="90" relEndLine="90" endColumnPos="23" structuredText="_d2SRp5owEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_d2S4u5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_entry" id="_d2S4vZowEeyfB_I1yU9UvA" text="SFCResetResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_d2S4v5owEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_d2S4vZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_d2S4vpowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_d2S4wZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_d2S4vZowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2S4wJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_exit">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_exit" id="_d2S4wpowEeyfB_I1yU9UvA" text="GVL.IsSFCResetting:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_d2S4xJowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_d2S4wpowEeyfB_I1yU9UvA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_d2S4w5owEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_FaultAirPressureDetection">
        <implementation xsi:type="ST:StructuredText" label="ACT_FaultAirPressureDetection" id="_d2S4xZowEeyfB_I1yU9UvA" text="IF(&#xA;&#x9;Block_LSCSep1_LSCSep2.DI_BoundaryPressure = FALSE &#xA;&#x9;OR Block_SSC_PAC.DI_BoundaryPressure = FALSE&#xA;&#x9;OR Block_Stack_Crane.AI_PressureSensor &lt;= 10000&#xA;&#x9;OR Block_Stamp_RC.AI_PressureSensor &lt;= 10000&#xA;&#x9;OR EngergyMonitoringHardware.PressureSensor_4bar.DI_PressureReached = FALSE &#xA;)&#xA;THEN&#xA; EmergencyStop := TRUE; &#xA; Timer(IN := NOT Timer.Q, PT:=T#500MS);&#xA;&#x9;IF (Timer.ET &lt; Timer.PT/2) THEN&#xA;&#x9;&#x9;//GREEN&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;ELSE&#xA;&#x9;&#x9;//WHITE&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_On();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampReset_On();&#xA;&#x9;END_IF&#xA;END_IF">
          <statements xsi:type="ST:If" id="_d2S455owEeyfB_I1yU9UvA" statementType="IF" absStartLine="1" absEndLine="36" relStartLine="1" relEndLine="36" endColumnPos="5" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
            <conditionalBlocks id="_d2S45powEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="1" absEndLine="35" relStartLine="1" relEndLine="35" endColumnPos="6" structuredText="_d2S4xZowEeyfB_I1yU9UvA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_d2S4x5owEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_d2S4xpowEeyfB_I1yU9UvA" operator="OR">
                  <left xsi:type="STE:BinaryExpression" operator="EQUAL">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_LSCSep1_LSCSep2">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_BoundaryPressure"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:BinaryExpression" operator="EQUAL">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_SSC_PAC">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_BoundaryPressure"/>
                      </left>
                      <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_Stack_Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_PressureSensor"/>
                        </left>
                        <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="10000"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_Stamp_RC">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_PressureSensor"/>
                          </left>
                          <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="10000"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="EQUAL">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="EngergyMonitoringHardware">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PressureSensor_4bar">
                              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_PressureReached"/>
                            </innerVariable>
                          </left>
                          <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                        </right>
                      </right>
                    </right>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_d2S4yZowEeyfB_I1yU9UvA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="22" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                <right xsi:type="STE:Literal" id="_d2S4yJowEeyfB_I1yU9UvA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_d2S4zJowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="38" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
                  <parameters>
                    <assignedValue xsi:type="STE:UnaryExpression" id="_d2S4ypowEeyfB_I1yU9UvA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                      <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Q"/>
                      </subexpression>
                    </assignedValue>
                    <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
                  </parameters>
                  <parameters>
                    <assignedValue xsi:type="STE:Literal" id="_d2S4y5owEeyfB_I1yU9UvA" dataType="TIME" expressionType="LITERAL" symbol="T#500MS"/>
                    <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                  </parameters>
                </functionCall>
              </substatements>
              <substatements xsi:type="ST:If" id="_d2S45ZowEeyfB_I1yU9UvA" statementType="IF" absStartLine="11" absEndLine="35" relStartLine="11" relEndLine="35" startColumnPos="1" endColumnPos="6" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                <conditionalBlocks id="_d2S42ZowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="11" absEndLine="22" relStartLine="11" relEndLine="22" startColumnPos="1" endColumnPos="41" structuredText="_d2S4xZowEeyfB_I1yU9UvA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_d2S4zpowEeyfB_I1yU9UvA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_d2S4zZowEeyfB_I1yU9UvA" operator="LESSER_THAN">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ET"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="DIV">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                        </left>
                        <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                      </right>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S4z5owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="2" endColumnPos="36" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S40JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="2" endColumnPos="51" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S40ZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="2" endColumnPos="36" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S40powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="2" endColumnPos="41" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S405owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="2" endColumnPos="40" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S41JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="2" endColumnPos="37" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S41ZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="2" endColumnPos="52" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S41powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="2" endColumnPos="37" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S415owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="2" endColumnPos="42" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S42JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="2" endColumnPos="41" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
                  </substatements>
                </conditionalBlocks>
                <conditionalBlocks id="_d2S45JowEeyfB_I1yU9UvA" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="34" relStartLine="23" relEndLine="34" startColumnPos="1" endColumnPos="40" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S42powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="2" endColumnPos="37" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S425owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="2" endColumnPos="52" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S43JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="2" endColumnPos="37" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S43ZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="2" endColumnPos="42" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S43powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="2" endColumnPos="41" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S435owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="2" endColumnPos="36" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S44JowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="2" endColumnPos="51" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S44ZowEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="2" endColumnPos="36" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S44powEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="2" endColumnPos="41" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_d2S445owEeyfB_I1yU9UvA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="2" endColumnPos="40" structuredText="_d2S4xZowEeyfB_I1yU9UvA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Call_All" incomingTransitions="//@resources.0/@pous.37/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <transitions condition="Not AutomaticExecuteCompleted AND SFCResetCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.0" local_ID="5"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Stack_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Crane_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="LargeSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="SmallSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="RefillConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.6" local_ID="18" stepLevel="6"/>
          <steps name="Stamp_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.7" local_ID="21" stepLevel="7"/>
          <steps name="PicAlpha_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.8" local_ID="24" stepLevel="8"/>
          <steps name="Emergency_Handled" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.9" local_ID="27" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" condition="//@resources.0/@pous.37/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Stack.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Crane.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LargeSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="PicAlphaConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="SmallSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="RefillConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.6" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.7" local_ID="20"/>
          <transitions condition="Stamp.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.7" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.8" local_ID="23"/>
          <transitions condition="PicAlpha.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.8" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.9" local_ID="26"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.9" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Initialisation_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" condition="//@resources.0/@pous.37/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Stamp_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.1" local_ID="6"/>
          <steps name="Crane_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.2" local_ID="9"/>
          <steps name="PicAlpha_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.3" local_ID="12"/>
          <steps name="LargeSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="16"/>
          <steps name="PicAlphaConveyor_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="17"/>
          <steps name="SmallSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="18"/>
          <steps name="RefillConveoyr_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="19"/>
          <steps name="Stack_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.5" local_ID="23"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="26">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" condition="//@resources.0/@pous.37/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="FaultAirPressureDetection" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="29"/>
          <steps name="EmergencyChecking" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="30"/>
          <steps name="ManuelModeCehcking" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="31" stepLevel="1"/>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.0" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.12" local_ID="4"/>
          <transitions condition="Stamp.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Crane.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.2" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="PicAlpha.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.3" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.7" local_ID="14"/>
          <transitions condition="LargeSortingConveyor.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.4 //@resources.0/@pous.37/@actions.17/@implementation/@steps.5 //@resources.0/@pous.37/@actions.17/@implementation/@steps.6 //@resources.0/@pous.37/@actions.17/@implementation/@steps.7" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.8" local_ID="22"/>
          <transitions condition="Stack.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.8" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.9" local_ID="25"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.9 //@resources.0/@pous.37/@actions.17/@implementation/@steps.10 //@resources.0/@pous.37/@actions.17/@implementation/@steps.11 //@resources.0/@pous.37/@actions.17/@implementation/@steps.12" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="A_to_V_Transducer" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_AmperToVolt" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="FlowSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Flow" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="GearPointFlowSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_ReachedGearPoint" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="MagnetValve" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DO_Changeover" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="PressureSensor_4bar" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_PressureReached" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="ProtectiveContact" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DO_Plug" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="V_Sensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Voltage" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="Wattmeter" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Energy" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <tasks name="PlcTask" controlledPrograms="//@resources.0/@pous.0"/>
    <types name="RFID_ByteArray">
      <variables xsi:type="C:ArrayVariable" name="RFID_Data" scope="VAR" type="BYTE" typeName="BYTE" array="true">
        <location/>
        <lowerBound xsi:type="STE:Literal" id="_d2CZ0JowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
        <upperBound xsi:type="STE:Literal" id="_d2CZ0ZowEeyfB_I1yU9UvA" dataType="DINT" expressionType="LITERAL" symbol="127"/>
      </variables>
    </types>
  </resources>
</C:Configuration>
